{"version":3,"sources":["webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/search_results.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/search_results_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/index.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/reply_indicator.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/reply_indicator_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/autosuggest_account.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/autosuggest_account_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/components/autosuggest_emoji.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/components/autosuggest_hashtag.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/components/autosuggest_textarea.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/components/autosuggest_input.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/poll_button.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/poll_button_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/upload_button.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/upload_button_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/text_icon_button.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/spoiler_button_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/privacy_dropdown_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/poll_form.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/poll_form_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/upload_progress_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/upload.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/upload_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/sensitive_button_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/upload_form.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/upload_form_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/warning.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/warning_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/language_dropdown.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/language_dropdown_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/util/url_regex.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/components/compose_form.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/util/counter.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/compose/containers/compose_form_container.js"],"names":["messages","defineMessages","dismissSuggestion","SearchResults","injectIntl","ImmutablePureComponent","handleLoadMoreAccounts","this","props","expandSearch","handleLoadMoreStatuses","handleLoadMoreHashtags","componentDidMount","searchTerm","fetchSuggestions","componentDidUpdate","render","intl","results","suggestions","isEmpty","className","id","fixedWidth","defaultMessage","map","suggestion","get","actionIcon","actionTitle","formatMessage","onActionClick","accounts","statuses","hashtags","count","size","accountId","visible","onClick","statusId","searchEnabled","startsWith","includes","hashtag","values","propTypes","ImmutablePropTypes","isRequired","list","PropTypes","func","string","object","connect","state","getIn","dispatch","type","account","start","home_timeline","notifications","public","community","preferences","logout","compose","logoutMessage","logoutConfirm","Compose","ownProps","columns","showSearch","multiColumn","isSearchPage","React","PureComponent","handleLogoutClick","e","preventDefault","stopPropagation","openModal","message","confirm","closeWhenConfirm","onConfirm","logOut","onFocus","changeComposing","onBlur","mountCompose","componentWillUnmount","unmountCompose","header","Link","to","title","aria-label","some","column","href","role","onClose","alt","draggable","src","mascot","elephantUIPlane","defaultStyle","x","style","spring","stiffness","damping","transform","visibility","cancel","ReplyIndicator","handleClick","onCancel","handleAccountClick","button","ctrlKey","metaKey","context","router","history","push","status","content","__html","icon","inverted","dangerouslySetInnerHTML","compact","media","contextTypes","getStatus","makeGetStatus","editing","cancelReplyCompose","AutosuggestAccount","getAccount","makeGetAccount","AutosuggestEmoji","emoji","url","custom","imageUrl","mapping","unicodeMapping","native","replace","assetHost","filename","colons","AutosuggestHashtag","tag","weeklyUses","value","reduce","total","day","uses","name","undefined","AutosuggestTextarea","suggestionsHidden","focused","selectedSuggestion","lastToken","tokenStart","onChange","token","str","caretPosition","word","left","slice","search","right","trim","length","indexOf","toLowerCase","textAtCursorMatchesToken","target","selectionStart","setState","onSuggestionsFetchRequested","onSuggestionsClearRequested","onKeyDown","disabled","which","isComposing","key","document","querySelector","parentElement","focus","Math","min","max","onSuggestionSelected","defaultPrevented","onSuggestionClick","currentTarget","getAttribute","textarea","setTextarea","c","onPaste","clipboardData","files","renderSuggestion","i","inner","tabIndex","data-index","classNames","selected","onMouseDown","componentWillReceiveProps","nextProps","placeholder","onKeyUp","autoFocus","children","display","ref","dir","aria-autocomplete","bool","defaultProps","AutosuggestInput","searchTokens","input","setInput","maxLength","arrayOf","number","add_poll","remove_poll","iconStyle","height","lineHeight","PollButton","active","unavailable","_","getState","removePoll","addPoll","upload","UploadButton","acceptContentTypes","handleChange","onSelectFile","fileElement","click","setRef","resetFileKey","multiple","accept","toArray","join","listOf","m","uploadCompose","width","TextIconButton","label","ariaControls","aria-expanded","aria-controls","marked","unmarked","changeComposeSpoilerness","changeComposeVisibility","isUserTouching","onModalOpen","onModalClose","closeModal","PrivacyDropdown","option_placeholder","add_option","remove_option","poll_duration","switchToMultiple","switchToSingle","minutes","hours","days","Option","handleOptionTitleChange","index","handleOptionRemove","onRemove","handleToggleMultiple","onToggleMultiple","handleCheckboxKeypress","onClearSuggestions","onFetchSuggestions","isPollMultiple","checkbox","onKeyPress","PollForm","handleAddOption","onAddOption","handleSelectDuration","onChangeSettings","isMultiple","expiresIn","options","onChangeOption","onRemoveOption","other","autoFocusIndex","addPollOption","removePollOption","changePollOption","changePollSettings","clearComposeSuggestions","fetchComposeSuggestions","position","path","selectComposeSuggestion","progress","UploadProgress","Upload","handleUndoClick","onUndo","handleFocalPointClick","onOpenFocalPoint","isEditingStatus","focusX","focusY","y","scale","backgroundImage","backgroundPosition","find","item","undoUploadCompose","initMediaEditModal","onSubmit","submitCompose","SensitiveButton","mediaCount","checked","changeComposeSensitivity","UploadForm","mediaIds","Warning","opacity","scaleX","scaleY","APPROX_HASHTAG_RE","HASHTAG_SEPARATORS","ALPHA","WORD","RegExp","buildHashtagRE","needsLockWarning","me","hashtagWarning","test","directMessageWarning","locked","changeLanguage","clear","icons","loupe","xmlns","viewBox","d","delete","listenerOptions","supportsPassiveEvents","passive","LanguageDropdownMenu","mounted","searchValue","handleDocumentClick","node","contains","setListRef","listNode","handleSearchChange","handleKeyDown","Array","from","childNodes","findIndex","element","firstChild","lastChild","shiftKey","handleSearchKeyDown","handleClear","renderItem","lang","aria-selected","addEventListener","removeEventListener","languages","frequentlyUsedLanguages","sort","a","b","indexOfA","indexOfB","Infinity","fuzzysort","go","keys","limit","threshold","result","obj","frequentlyUsed","current","placement","isSearching","preloadedLanguages","LanguageDropdown","open","handleToggle","top","getBoundingClientRect","activeElement","preventScroll","innerHeight","handleClose","toUpperCase","show","getFrequentlyUsedLanguages","createSelector","ImmutableMap","languageCounters","keySeq","reverse","changeComposeLanguage","useLanguage","urlRegex","regexSupplant","validUrlPrecedingChars","validDomain","validPortNumber","validUrlPath","validUrlQueryChars","validUrlQueryEndingChars","spoiler_placeholder","publish","publishLoud","saveChanges","ComposeForm","keyCode","handleSubmit","getFulltextForCharacterCounting","spoiler","spoilerText","inputText","text","canSubmit","isSubmitting","isChangingUpload","isUploading","anyMedia","fulltext","isOnlyWhitespace","maxChars","autosuggestTextarea","onSpoilerSuggestionSelected","handleChangeSpoilerText","onChangeSpoilerText","handleFocus","composeForm","singleColumn","window","innerWidth","documentElement","clientWidth","scrollIntoView","_updateFocusAndSelection","prevProps","focusDate","selectionEnd","preselectDate","isInReply","Promise","resolve","then","setSelectionRange","catch","console","error","setAutosuggestTextarea","setSpoilerText","handleEmojiPick","data","needsSpace","onPickEmoji","publishText","isEditing","privacy","isMobile","block","instanceOf","Date","changeCompose","changeComposeSpoilerText","insertEmojiCompose"],"mappings":"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","file":"js/features/compose-2f4de33672bcdf556156.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport AccountContainer from '../../../containers/account_container';\nimport StatusContainer from '../../../containers/status_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { ImmutableHashtag as Hashtag } from '../../../components/hashtag';\nimport Icon from 'mastodon/components/icon';\nimport { searchEnabled } from '../../../initial_state';\nimport LoadMore from 'mastodon/components/load_more';\n\nconst messages = defineMessages({\n  dismissSuggestion: { id: 'suggestions.dismiss', defaultMessage: 'Dismiss suggestion' },\n});\n\nexport default @injectIntl\nclass SearchResults extends ImmutablePureComponent {\n\n  static propTypes = {\n    results: ImmutablePropTypes.map.isRequired,\n    suggestions: ImmutablePropTypes.list.isRequired,\n    fetchSuggestions: PropTypes.func.isRequired,\n    expandSearch: PropTypes.func.isRequired,\n    dismissSuggestion: PropTypes.func.isRequired,\n    searchTerm: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    if (this.props.searchTerm === '') {\n      this.props.fetchSuggestions();\n    }\n  }\n\n  componentDidUpdate () {\n    if (this.props.searchTerm === '') {\n      this.props.fetchSuggestions();\n    }\n  }\n\n  handleLoadMoreAccounts = () => this.props.expandSearch('accounts');\n\n  handleLoadMoreStatuses = () => this.props.expandSearch('statuses');\n\n  handleLoadMoreHashtags = () => this.props.expandSearch('hashtags');\n\n  render () {\n    const { intl, results, suggestions, dismissSuggestion, searchTerm } = this.props;\n\n    if (searchTerm === '' && !suggestions.isEmpty()) {\n      return (\n        <div className='search-results'>\n          <div className='trends'>\n            <div className='trends__header'>\n              <Icon id='user-plus' fixedWidth />\n              <FormattedMessage id='suggestions.header' defaultMessage='You might be interested in…' />\n            </div>\n\n            {suggestions && suggestions.map(suggestion => (\n              <AccountContainer\n                key={suggestion.get('account')}\n                id={suggestion.get('account')}\n                actionIcon={suggestion.get('source') === 'past_interaction' ? 'times' : null}\n                actionTitle={suggestion.get('source') === 'past_interaction' ? intl.formatMessage(messages.dismissSuggestion) : null}\n                onActionClick={dismissSuggestion}\n              />\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    let accounts, statuses, hashtags;\n    let count = 0;\n\n    if (results.get('accounts') && results.get('accounts').size > 0) {\n      count   += results.get('accounts').size;\n      accounts = (\n        <div className='search-results__section'>\n          <h5><Icon id='users' fixedWidth /><FormattedMessage id='search_results.accounts' defaultMessage='People' /></h5>\n\n          {results.get('accounts').map(accountId => <AccountContainer key={accountId} id={accountId} />)}\n\n          {results.get('accounts').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreAccounts} />}\n        </div>\n      );\n    }\n\n    if (results.get('statuses') && results.get('statuses').size > 0) {\n      count   += results.get('statuses').size;\n      statuses = (\n        <div className='search-results__section'>\n          <h5><Icon id='quote-right' fixedWidth /><FormattedMessage id='search_results.statuses' defaultMessage='Posts' /></h5>\n\n          {results.get('statuses').map(statusId => <StatusContainer key={statusId} id={statusId} />)}\n\n          {results.get('statuses').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreStatuses} />}\n        </div>\n      );\n    } else if(results.get('statuses') && results.get('statuses').size === 0 && !searchEnabled && !(searchTerm.startsWith('@') || searchTerm.startsWith('#') || searchTerm.includes(' '))) {\n      statuses = (\n        <div className='search-results__section'>\n          <h5><Icon id='quote-right' fixedWidth /><FormattedMessage id='search_results.statuses' defaultMessage='Posts' /></h5>\n\n          <div className='search-results__info'>\n            <FormattedMessage id='search_results.statuses_fts_disabled' defaultMessage='Searching posts by their content is not enabled on this Mastodon server.' />\n          </div>\n        </div>\n      );\n    }\n\n    if (results.get('hashtags') && results.get('hashtags').size > 0) {\n      count += results.get('hashtags').size;\n      hashtags = (\n        <div className='search-results__section'>\n          <h5><Icon id='hashtag' fixedWidth /><FormattedMessage id='search_results.hashtags' defaultMessage='Hashtags' /></h5>\n\n          {results.get('hashtags').map(hashtag => <Hashtag key={hashtag.get('name')} hashtag={hashtag} />)}\n\n          {results.get('hashtags').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreHashtags} />}\n        </div>\n      );\n    }\n\n    return (\n      <div className='search-results'>\n        <div className='search-results__header'>\n          <Icon id='search' fixedWidth />\n          <FormattedMessage id='search_results.total' defaultMessage='{count, number} {count, plural, one {result} other {results}}' values={{ count }} />\n        </div>\n\n        {accounts}\n        {statuses}\n        {hashtags}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport SearchResults from '../components/search_results';\nimport { fetchSuggestions, dismissSuggestion } from 'mastodon/actions/suggestions';\nimport { expandSearch } from 'mastodon/actions/search';\n\nconst mapStateToProps = state => ({\n  results: state.getIn(['search', 'results']),\n  suggestions: state.getIn(['suggestions', 'items']),\n  searchTerm: state.getIn(['search', 'searchTerm']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSuggestions: () => dispatch(fetchSuggestions()),\n  expandSearch: type => dispatch(expandSearch(type)),\n  dismissSuggestion: account => dispatch(dismissSuggestion(account.get('id'))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import React from 'react';\nimport ComposeFormContainer from './containers/compose_form_container';\nimport NavigationContainer from './containers/navigation_container';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport { mountCompose, unmountCompose } from '../../actions/compose';\nimport { Link } from 'react-router-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport SearchContainer from './containers/search_container';\nimport Motion from '../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport SearchResultsContainer from './containers/search_results_container';\nimport { changeComposing } from '../../actions/compose';\nimport { openModal } from 'mastodon/actions/modal';\nimport elephantUIPlane from '../../../images/elephant_ui_plane.svg';\nimport { mascot } from '../../initial_state';\nimport Icon from 'mastodon/components/icon';\nimport { logOut } from 'mastodon/utils/log_out';\n\nconst messages = defineMessages({\n  start: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  community: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  logout: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  compose: { id: 'navigation_bar.compose', defaultMessage: 'Compose new post' },\n  logoutMessage: { id: 'confirmations.logout.message', defaultMessage: 'Are you sure you want to log out?' },\n  logoutConfirm: { id: 'confirmations.logout.confirm', defaultMessage: 'Log out' },\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  columns: state.getIn(['settings', 'columns']),\n  showSearch: ownProps.multiColumn ? state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']) : ownProps.isSearchPage,\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Compose extends React.PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    columns: ImmutablePropTypes.list.isRequired,\n    multiColumn: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    isSearchPage: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    const { isSearchPage } = this.props;\n\n    if (!isSearchPage) {\n      this.props.dispatch(mountCompose());\n    }\n  }\n\n  componentWillUnmount () {\n    const { isSearchPage } = this.props;\n\n    if (!isSearchPage) {\n      this.props.dispatch(unmountCompose());\n    }\n  }\n\n  handleLogoutClick = e => {\n    const { dispatch, intl } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    dispatch(openModal('CONFIRM', {\n      message: intl.formatMessage(messages.logoutMessage),\n      confirm: intl.formatMessage(messages.logoutConfirm),\n      closeWhenConfirm: false,\n      onConfirm: () => logOut(),\n    }));\n\n    return false;\n  }\n\n  onFocus = () => {\n    this.props.dispatch(changeComposing(true));\n  }\n\n  onBlur = () => {\n    this.props.dispatch(changeComposing(false));\n  }\n\n  render () {\n    const { multiColumn, showSearch, isSearchPage, intl } = this.props;\n\n    let header = '';\n\n    if (multiColumn) {\n      const { columns } = this.props;\n      header = (\n        <nav className='drawer__header'>\n          <Link to='/getting-started' className='drawer__tab' title={intl.formatMessage(messages.start)} aria-label={intl.formatMessage(messages.start)}><Icon id='bars' fixedWidth /></Link>\n          {!columns.some(column => column.get('id') === 'HOME') && (\n            <Link to='/home' className='drawer__tab' title={intl.formatMessage(messages.home_timeline)} aria-label={intl.formatMessage(messages.home_timeline)}><Icon id='home' fixedWidth /></Link>\n          )}\n          {!columns.some(column => column.get('id') === 'NOTIFICATIONS') && (\n            <Link to='/notifications' className='drawer__tab' title={intl.formatMessage(messages.notifications)} aria-label={intl.formatMessage(messages.notifications)}><Icon id='bell' fixedWidth /></Link>\n          )}\n          {!columns.some(column => column.get('id') === 'COMMUNITY') && (\n            <Link to='/public/local' className='drawer__tab' title={intl.formatMessage(messages.community)} aria-label={intl.formatMessage(messages.community)}><Icon id='users' fixedWidth /></Link>\n          )}\n          {!columns.some(column => column.get('id') === 'PUBLIC') && (\n            <Link to='/public' className='drawer__tab' title={intl.formatMessage(messages.public)} aria-label={intl.formatMessage(messages.public)}><Icon id='globe' fixedWidth /></Link>\n          )}\n          <a href='/settings/preferences' className='drawer__tab' title={intl.formatMessage(messages.preferences)} aria-label={intl.formatMessage(messages.preferences)}><Icon id='cog' fixedWidth /></a>\n          <a href='/auth/sign_out' className='drawer__tab' title={intl.formatMessage(messages.logout)} aria-label={intl.formatMessage(messages.logout)} onClick={this.handleLogoutClick}><Icon id='sign-out' fixedWidth /></a>\n        </nav>\n      );\n    }\n\n    return (\n      <div className='drawer' role='region' aria-label={intl.formatMessage(messages.compose)}>\n        {header}\n\n        {(multiColumn || isSearchPage) && <SearchContainer /> }\n\n        <div className='drawer__pager'>\n          {!isSearchPage && <div className='drawer__inner' onFocus={this.onFocus}>\n            <NavigationContainer onClose={this.onBlur} />\n\n            <ComposeFormContainer />\n\n            <div className='drawer__inner__mastodon'>\n              <img alt='' draggable='false' src={mascot || elephantUIPlane} />\n            </div>\n          </div>}\n\n          <Motion defaultStyle={{ x: isSearchPage ? 0 : -100 }} style={{ x: spring(showSearch || isSearchPage ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) => (\n              <div className='drawer__inner darker' style={{ transform: `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                <SearchResultsContainer />\n              </div>\n            )}\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Avatar from '../../../components/avatar';\nimport IconButton from '../../../components/icon_button';\nimport DisplayName from '../../../components/display_name';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport AttachmentList from 'mastodon/components/attachment_list';\n\nconst messages = defineMessages({\n  cancel: { id: 'reply_indicator.cancel', defaultMessage: 'Cancel' },\n});\n\nexport default @injectIntl\nclass ReplyIndicator extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onCancel: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.onCancel();\n  }\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n  }\n\n  render () {\n    const { status, intl } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    const content = { __html: status.get('contentHtml') };\n\n    return (\n      <div className='reply-indicator'>\n        <div className='reply-indicator__header'>\n          <div className='reply-indicator__cancel'><IconButton title={intl.formatMessage(messages.cancel)} icon='times' onClick={this.handleClick} inverted /></div>\n\n          <a href={status.getIn(['account', 'url'])} onClick={this.handleAccountClick} className='reply-indicator__display-name'>\n            <div className='reply-indicator__display-avatar'><Avatar account={status.get('account')} size={24} /></div>\n            <DisplayName account={status.get('account')} />\n          </a>\n        </div>\n\n        <div className='reply-indicator__content translate' dangerouslySetInnerHTML={content} />\n\n        {status.get('media_attachments').size > 0 && (\n          <AttachmentList\n            compact\n            media={status.get('media_attachments')}\n          />\n        )}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport { cancelReplyCompose } from '../../../actions/compose';\nimport { makeGetStatus } from '../../../selectors';\nimport ReplyIndicator from '../components/reply_indicator';\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n\n  const mapStateToProps = state => {\n    let statusId = state.getIn(['compose', 'id'], null);\n    let editing  = true;\n\n    if (statusId === null) {\n      statusId = state.getIn(['compose', 'in_reply_to']);\n      editing  = false;\n    }\n\n    return {\n      status: getStatus(state, { id: statusId }),\n      editing,\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n  onCancel () {\n    dispatch(cancelReplyCompose());\n  },\n\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(ReplyIndicator);\n","import React from 'react';\nimport Avatar from '../../../components/avatar';\nimport DisplayName from '../../../components/display_name';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nexport default class AutosuggestAccount extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n  };\n\n  render () {\n    const { account } = this.props;\n\n    return (\n      <div className='autosuggest-account' title={account.get('acct')}>\n        <div className='autosuggest-account-icon'><Avatar account={account} size={18} /></div>\n        <DisplayName account={account} />\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport AutosuggestAccount from '../components/autosuggest_account';\nimport { makeGetAccount } from '../../../selectors';\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { id }) => ({\n    account: getAccount(state, id),\n  });\n\n  return mapStateToProps;\n};\n\nexport default connect(makeMapStateToProps)(AutosuggestAccount);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport unicodeMapping from '../features/emoji/emoji_unicode_mapping_light';\nimport { assetHost } from 'mastodon/utils/config';\n\nexport default class AutosuggestEmoji extends React.PureComponent {\n\n  static propTypes = {\n    emoji: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { emoji } = this.props;\n    let url;\n\n    if (emoji.custom) {\n      url = emoji.imageUrl;\n    } else {\n      const mapping = unicodeMapping[emoji.native] || unicodeMapping[emoji.native.replace(/\\uFE0F$/, '')];\n\n      if (!mapping) {\n        return null;\n      }\n\n      url = `${assetHost}/emoji/${mapping.filename}.svg`;\n    }\n\n    return (\n      <div className='autosuggest-emoji'>\n        <img\n          className='emojione'\n          src={url}\n          alt={emoji.native || emoji.colons}\n        />\n\n        {emoji.colons}\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ShortNumber from 'mastodon/components/short_number';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class AutosuggestHashtag extends React.PureComponent {\n\n  static propTypes = {\n    tag: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string,\n      history: PropTypes.array,\n    }).isRequired,\n  };\n\n  render() {\n    const { tag } = this.props;\n    const weeklyUses = tag.history && (\n      <ShortNumber\n        value={tag.history.reduce((total, day) => total + day.uses * 1, 0)}\n      />\n    );\n\n    return (\n      <div className='autosuggest-hashtag'>\n        <div className='autosuggest-hashtag__name'>\n          #<strong>{tag.name}</strong>\n        </div>\n        {tag.history !== undefined && (\n          <div className='autosuggest-hashtag__uses'>\n            <FormattedMessage\n              id='autosuggest_hashtag.per_week'\n              defaultMessage='{count} per week'\n              values={{ count: weeklyUses }}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport AutosuggestAccountContainer from '../features/compose/containers/autosuggest_account_container';\nimport AutosuggestEmoji from './autosuggest_emoji';\nimport AutosuggestHashtag from './autosuggest_hashtag';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Textarea from 'react-textarea-autosize';\nimport classNames from 'classnames';\n\nconst textAtCursorMatchesToken = (str, caretPosition) => {\n  let word;\n\n  let left  = str.slice(0, caretPosition).search(/\\S+$/);\n  let right = str.slice(caretPosition).search(/\\s/);\n\n  if (right < 0) {\n    word = str.slice(left);\n  } else {\n    word = str.slice(left, right + caretPosition);\n  }\n\n  if (!word || word.trim().length < 3 || ['@', ':', '#'].indexOf(word[0]) === -1) {\n    return [null, null];\n  }\n\n  word = word.trim().toLowerCase();\n\n  if (word.length > 0) {\n    return [left + 1, word];\n  } else {\n    return [null, null];\n  }\n};\n\nexport default class AutosuggestTextarea extends ImmutablePureComponent {\n\n  static propTypes = {\n    value: PropTypes.string,\n    suggestions: ImmutablePropTypes.list,\n    disabled: PropTypes.bool,\n    placeholder: PropTypes.string,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    onSuggestionsClearRequested: PropTypes.func.isRequired,\n    onSuggestionsFetchRequested: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onKeyUp: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onPaste: PropTypes.func.isRequired,\n    autoFocus: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    autoFocus: true,\n  };\n\n  state = {\n    suggestionsHidden: true,\n    focused: false,\n    selectedSuggestion: 0,\n    lastToken: null,\n    tokenStart: 0,\n  };\n\n  onChange = (e) => {\n    const [ tokenStart, token ] = textAtCursorMatchesToken(e.target.value, e.target.selectionStart);\n\n    if (token !== null && this.state.lastToken !== token) {\n      this.setState({ lastToken: token, selectedSuggestion: 0, tokenStart });\n      this.props.onSuggestionsFetchRequested(token);\n    } else if (token === null) {\n      this.setState({ lastToken: null });\n      this.props.onSuggestionsClearRequested();\n    }\n\n    this.props.onChange(e);\n  }\n\n  onKeyDown = (e) => {\n    const { suggestions, disabled } = this.props;\n    const { selectedSuggestion, suggestionsHidden } = this.state;\n\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (e.which === 229 || e.isComposing) {\n      // Ignore key events during text composition\n      // e.key may be a name of the physical key even in this case (e.x. Safari / Chrome on Mac)\n      return;\n    }\n\n    switch(e.key) {\n    case 'Escape':\n      if (suggestions.size === 0 || suggestionsHidden) {\n        document.querySelector('.ui').parentElement.focus();\n      } else {\n        e.preventDefault();\n        this.setState({ suggestionsHidden: true });\n      }\n\n      break;\n    case 'ArrowDown':\n      if (suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        this.setState({ selectedSuggestion: Math.min(selectedSuggestion + 1, suggestions.size - 1) });\n      }\n\n      break;\n    case 'ArrowUp':\n      if (suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        this.setState({ selectedSuggestion: Math.max(selectedSuggestion - 1, 0) });\n      }\n\n      break;\n    case 'Enter':\n    case 'Tab':\n      // Select suggestion\n      if (this.state.lastToken !== null && suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.onSuggestionSelected(this.state.tokenStart, this.state.lastToken, suggestions.get(selectedSuggestion));\n      }\n\n      break;\n    }\n\n    if (e.defaultPrevented || !this.props.onKeyDown) {\n      return;\n    }\n\n    this.props.onKeyDown(e);\n  }\n\n  onBlur = () => {\n    this.setState({ suggestionsHidden: true, focused: false });\n  }\n\n  onFocus = (e) => {\n    this.setState({ focused: true });\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  }\n\n  onSuggestionClick = (e) => {\n    const suggestion = this.props.suggestions.get(e.currentTarget.getAttribute('data-index'));\n    e.preventDefault();\n    this.props.onSuggestionSelected(this.state.tokenStart, this.state.lastToken, suggestion);\n    this.textarea.focus();\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.suggestions !== this.props.suggestions && nextProps.suggestions.size > 0 && this.state.suggestionsHidden && this.state.focused) {\n      this.setState({ suggestionsHidden: false });\n    }\n  }\n\n  setTextarea = (c) => {\n    this.textarea = c;\n  }\n\n  onPaste = (e) => {\n    if (e.clipboardData && e.clipboardData.files.length === 1) {\n      this.props.onPaste(e.clipboardData.files);\n      e.preventDefault();\n    }\n  }\n\n  renderSuggestion = (suggestion, i) => {\n    const { selectedSuggestion } = this.state;\n    let inner, key;\n\n    if (suggestion.type === 'emoji') {\n      inner = <AutosuggestEmoji emoji={suggestion} />;\n      key   = suggestion.id;\n    } else if (suggestion.type === 'hashtag') {\n      inner = <AutosuggestHashtag tag={suggestion} />;\n      key   = suggestion.name;\n    } else if (suggestion.type === 'account') {\n      inner = <AutosuggestAccountContainer id={suggestion.id} />;\n      key   = suggestion.id;\n    }\n\n    return (\n      <div role='button' tabIndex='0' key={key} data-index={i} className={classNames('autosuggest-textarea__suggestions__item', { selected: i === selectedSuggestion })} onMouseDown={this.onSuggestionClick}>\n        {inner}\n      </div>\n    );\n  }\n\n  render () {\n    const { value, suggestions, disabled, placeholder, onKeyUp, autoFocus, children } = this.props;\n    const { suggestionsHidden } = this.state;\n\n    return [\n      <div className='compose-form__autosuggest-wrapper' key='autosuggest-wrapper'>\n        <div className='autosuggest-textarea'>\n          <label>\n            <span style={{ display: 'none' }}>{placeholder}</span>\n\n            <Textarea\n              ref={this.setTextarea}\n              className='autosuggest-textarea__textarea'\n              disabled={disabled}\n              placeholder={placeholder}\n              autoFocus={autoFocus}\n              value={value}\n              onChange={this.onChange}\n              onKeyDown={this.onKeyDown}\n              onKeyUp={onKeyUp}\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n              onPaste={this.onPaste}\n              dir='auto'\n              aria-autocomplete='list'\n            />\n          </label>\n        </div>\n        {children}\n      </div>,\n\n      <div className='autosuggest-textarea__suggestions-wrapper' key='suggestions-wrapper'>\n        <div className={`autosuggest-textarea__suggestions ${suggestionsHidden || suggestions.isEmpty() ? '' : 'autosuggest-textarea__suggestions--visible'}`}>\n          {suggestions.map(this.renderSuggestion)}\n        </div>\n      </div>,\n    ];\n  }\n\n}\n","import React from 'react';\nimport AutosuggestAccountContainer from '../features/compose/containers/autosuggest_account_container';\nimport AutosuggestEmoji from './autosuggest_emoji';\nimport AutosuggestHashtag from './autosuggest_hashtag';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport classNames from 'classnames';\n\nconst textAtCursorMatchesToken = (str, caretPosition, searchTokens) => {\n  let word;\n\n  let left  = str.slice(0, caretPosition).search(/\\S+$/);\n  let right = str.slice(caretPosition).search(/\\s/);\n\n  if (right < 0) {\n    word = str.slice(left);\n  } else {\n    word = str.slice(left, right + caretPosition);\n  }\n\n  if (!word || word.trim().length < 3 || searchTokens.indexOf(word[0]) === -1) {\n    return [null, null];\n  }\n\n  word = word.trim().toLowerCase();\n\n  if (word.length > 0) {\n    return [left + 1, word];\n  } else {\n    return [null, null];\n  }\n};\n\nexport default class AutosuggestInput extends ImmutablePureComponent {\n\n  static propTypes = {\n    value: PropTypes.string,\n    suggestions: ImmutablePropTypes.list,\n    disabled: PropTypes.bool,\n    placeholder: PropTypes.string,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    onSuggestionsClearRequested: PropTypes.func.isRequired,\n    onSuggestionsFetchRequested: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onKeyUp: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    autoFocus: PropTypes.bool,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    searchTokens: PropTypes.arrayOf(PropTypes.string),\n    maxLength: PropTypes.number,\n  };\n\n  static defaultProps = {\n    autoFocus: true,\n    searchTokens: ['@', ':', '#'],\n  };\n\n  state = {\n    suggestionsHidden: true,\n    focused: false,\n    selectedSuggestion: 0,\n    lastToken: null,\n    tokenStart: 0,\n  };\n\n  onChange = (e) => {\n    const [ tokenStart, token ] = textAtCursorMatchesToken(e.target.value, e.target.selectionStart, this.props.searchTokens);\n\n    if (token !== null && this.state.lastToken !== token) {\n      this.setState({ lastToken: token, selectedSuggestion: 0, tokenStart });\n      this.props.onSuggestionsFetchRequested(token);\n    } else if (token === null) {\n      this.setState({ lastToken: null });\n      this.props.onSuggestionsClearRequested();\n    }\n\n    this.props.onChange(e);\n  }\n\n  onKeyDown = (e) => {\n    const { suggestions, disabled } = this.props;\n    const { selectedSuggestion, suggestionsHidden } = this.state;\n\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (e.which === 229 || e.isComposing) {\n      // Ignore key events during text composition\n      // e.key may be a name of the physical key even in this case (e.x. Safari / Chrome on Mac)\n      return;\n    }\n\n    switch(e.key) {\n    case 'Escape':\n      if (suggestions.size === 0 || suggestionsHidden) {\n        document.querySelector('.ui').parentElement.focus();\n      } else {\n        e.preventDefault();\n        this.setState({ suggestionsHidden: true });\n      }\n\n      break;\n    case 'ArrowDown':\n      if (suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        this.setState({ selectedSuggestion: Math.min(selectedSuggestion + 1, suggestions.size - 1) });\n      }\n\n      break;\n    case 'ArrowUp':\n      if (suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        this.setState({ selectedSuggestion: Math.max(selectedSuggestion - 1, 0) });\n      }\n\n      break;\n    case 'Enter':\n    case 'Tab':\n      // Select suggestion\n      if (this.state.lastToken !== null && suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.onSuggestionSelected(this.state.tokenStart, this.state.lastToken, suggestions.get(selectedSuggestion));\n      }\n\n      break;\n    }\n\n    if (e.defaultPrevented || !this.props.onKeyDown) {\n      return;\n    }\n\n    this.props.onKeyDown(e);\n  }\n\n  onBlur = () => {\n    this.setState({ suggestionsHidden: true, focused: false });\n  }\n\n  onFocus = () => {\n    this.setState({ focused: true });\n  }\n\n  onSuggestionClick = (e) => {\n    const suggestion = this.props.suggestions.get(e.currentTarget.getAttribute('data-index'));\n    e.preventDefault();\n    this.props.onSuggestionSelected(this.state.tokenStart, this.state.lastToken, suggestion);\n    this.input.focus();\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.suggestions !== this.props.suggestions && nextProps.suggestions.size > 0 && this.state.suggestionsHidden && this.state.focused) {\n      this.setState({ suggestionsHidden: false });\n    }\n  }\n\n  setInput = (c) => {\n    this.input = c;\n  }\n\n  renderSuggestion = (suggestion, i) => {\n    const { selectedSuggestion } = this.state;\n    let inner, key;\n\n    if (suggestion.type === 'emoji') {\n      inner = <AutosuggestEmoji emoji={suggestion} />;\n      key   = suggestion.id;\n    } else if (suggestion.type ==='hashtag') {\n      inner = <AutosuggestHashtag tag={suggestion} />;\n      key   = suggestion.name;\n    } else if (suggestion.type === 'account') {\n      inner = <AutosuggestAccountContainer id={suggestion.id} />;\n      key   = suggestion.id;\n    }\n\n    return (\n      <div role='button' tabIndex='0' key={key} data-index={i} className={classNames('autosuggest-textarea__suggestions__item', { selected: i === selectedSuggestion })} onMouseDown={this.onSuggestionClick}>\n        {inner}\n      </div>\n    );\n  }\n\n  render () {\n    const { value, suggestions, disabled, placeholder, onKeyUp, autoFocus, className, id, maxLength } = this.props;\n    const { suggestionsHidden } = this.state;\n\n    return (\n      <div className='autosuggest-input'>\n        <label>\n          <span style={{ display: 'none' }}>{placeholder}</span>\n\n          <input\n            type='text'\n            ref={this.setInput}\n            disabled={disabled}\n            placeholder={placeholder}\n            autoFocus={autoFocus}\n            value={value}\n            onChange={this.onChange}\n            onKeyDown={this.onKeyDown}\n            onKeyUp={onKeyUp}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            dir='auto'\n            aria-autocomplete='list'\n            id={id}\n            className={className}\n            maxLength={maxLength}\n          />\n        </label>\n\n        <div className={`autosuggest-textarea__suggestions ${suggestionsHidden || suggestions.isEmpty() ? '' : 'autosuggest-textarea__suggestions--visible'}`}>\n          {suggestions.map(this.renderSuggestion)}\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport IconButton from '../../../components/icon_button';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  add_poll: { id: 'poll_button.add_poll', defaultMessage: 'Add a poll' },\n  remove_poll: { id: 'poll_button.remove_poll', defaultMessage: 'Remove poll' },\n});\n\nconst iconStyle = {\n  height: null,\n  lineHeight: '27px',\n};\n\nexport default\n@injectIntl\nclass PollButton extends React.PureComponent {\n\n  static propTypes = {\n    disabled: PropTypes.bool,\n    unavailable: PropTypes.bool,\n    active: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.onClick();\n  }\n\n  render () {\n    const { intl, active, unavailable, disabled } = this.props;\n\n    if (unavailable) {\n      return null;\n    }\n\n    return (\n      <div className='compose-form__poll-button'>\n        <IconButton\n          icon='tasks'\n          title={intl.formatMessage(active ? messages.remove_poll : messages.add_poll)}\n          disabled={disabled}\n          onClick={this.handleClick}\n          className={`compose-form__poll-button-icon ${active ? 'active' : ''}`}\n          size={18}\n          inverted\n          style={iconStyle}\n        />\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport PollButton from '../components/poll_button';\nimport { addPoll, removePoll } from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  unavailable: state.getIn(['compose', 'is_uploading']) || (state.getIn(['compose', 'media_attachments']).size > 0),\n  active: state.getIn(['compose', 'poll']) !== null,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch((_, getState) => {\n      if (getState().getIn(['compose', 'poll'])) {\n        dispatch(removePoll());\n      } else {\n        dispatch(addPoll());\n      }\n    });\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PollButton);\n","import React from 'react';\nimport IconButton from '../../../components/icon_button';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nconst messages = defineMessages({\n  upload: { id: 'upload_button.label', defaultMessage: 'Add images, a video or an audio file' },\n});\n\nconst makeMapStateToProps = () => {\n  const mapStateToProps = state => ({\n    acceptContentTypes: state.getIn(['media_attachments', 'accept_content_types']),\n  });\n\n  return mapStateToProps;\n};\n\nconst iconStyle = {\n  height: null,\n  lineHeight: '27px',\n};\n\nexport default @connect(makeMapStateToProps)\n@injectIntl\nclass UploadButton extends ImmutablePureComponent {\n\n  static propTypes = {\n    disabled: PropTypes.bool,\n    unavailable: PropTypes.bool,\n    onSelectFile: PropTypes.func.isRequired,\n    style: PropTypes.object,\n    resetFileKey: PropTypes.number,\n    acceptContentTypes: ImmutablePropTypes.listOf(PropTypes.string).isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleChange = (e) => {\n    if (e.target.files.length > 0) {\n      this.props.onSelectFile(e.target.files);\n    }\n  }\n\n  handleClick = () => {\n    this.fileElement.click();\n  }\n\n  setRef = (c) => {\n    this.fileElement = c;\n  }\n\n  render () {\n    const { intl, resetFileKey, unavailable, disabled, acceptContentTypes } = this.props;\n\n    if (unavailable) {\n      return null;\n    }\n\n    const message = intl.formatMessage(messages.upload);\n\n    return (\n      <div className='compose-form__upload-button'>\n        <IconButton icon='paperclip' title={message} disabled={disabled} onClick={this.handleClick} className='compose-form__upload-button-icon' size={18} inverted style={iconStyle} />\n        <label>\n          <span style={{ display: 'none' }}>{message}</span>\n          <input\n            key={resetFileKey}\n            ref={this.setRef}\n            type='file'\n            multiple\n            accept={acceptContentTypes.toArray().join(',')}\n            onChange={this.handleChange}\n            disabled={disabled}\n            style={{ display: 'none' }}\n          />\n        </label>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport UploadButton from '../components/upload_button';\nimport { uploadCompose } from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  disabled: state.getIn(['compose', 'is_uploading']) || (state.getIn(['compose', 'media_attachments']).size + state.getIn(['compose', 'pending_media_attachments']) > 3 || state.getIn(['compose', 'media_attachments']).some(m => ['video', 'audio'].includes(m.get('type')))),\n  unavailable: state.getIn(['compose', 'poll']) !== null,\n  resetFileKey: state.getIn(['compose', 'resetFileKey']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onSelectFile (files) {\n    dispatch(uploadCompose(files));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst iconStyle = {\n  height: null,\n  lineHeight: '27px',\n  width: `${18 * 1.28571429}px`,\n};\n\nexport default class TextIconButton extends React.PureComponent {\n\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    active: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    ariaControls: PropTypes.string,\n  };\n\n  render () {\n    const { label, title, active, ariaControls } = this.props;\n\n    return (\n      <button\n        title={title}\n        aria-label={title}\n        className={`text-icon-button ${active ? 'active' : ''}`}\n        aria-expanded={active}\n        onClick={this.props.onClick}\n        aria-controls={ariaControls} style={iconStyle}\n      >\n        {label}\n      </button>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport TextIconButton from '../components/text_icon_button';\nimport { changeComposeSpoilerness } from '../../../actions/compose';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  marked: { id: 'compose_form.spoiler.marked', defaultMessage: 'Text is hidden behind warning' },\n  unmarked: { id: 'compose_form.spoiler.unmarked', defaultMessage: 'Text is not hidden' },\n});\n\nconst mapStateToProps = (state, { intl }) => ({\n  label: 'CW',\n  title: intl.formatMessage(state.getIn(['compose', 'spoiler']) ? messages.marked : messages.unmarked),\n  active: state.getIn(['compose', 'spoiler']),\n  ariaControls: 'cw-spoiler-input',\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch(changeComposeSpoilerness());\n  },\n\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(TextIconButton));\n","import { connect } from 'react-redux';\nimport PrivacyDropdown from '../components/privacy_dropdown';\nimport { changeComposeVisibility } from '../../../actions/compose';\nimport { openModal, closeModal } from '../../../actions/modal';\nimport { isUserTouching } from '../../../is_mobile';\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['compose', 'privacy']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onChange (value) {\n    dispatch(changeComposeVisibility(value));\n  },\n\n  isUserTouching,\n  onModalOpen: props => dispatch(openModal('ACTIONS', props)),\n  onModalClose: () => dispatch(closeModal()),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivacyDropdown);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport IconButton from 'mastodon/components/icon_button';\nimport Icon from 'mastodon/components/icon';\nimport AutosuggestInput from 'mastodon/components/autosuggest_input';\nimport classNames from 'classnames';\n\nconst messages = defineMessages({\n  option_placeholder: { id: 'compose_form.poll.option_placeholder', defaultMessage: 'Choice {number}' },\n  add_option: { id: 'compose_form.poll.add_option', defaultMessage: 'Add a choice' },\n  remove_option: { id: 'compose_form.poll.remove_option', defaultMessage: 'Remove this choice' },\n  poll_duration: { id: 'compose_form.poll.duration', defaultMessage: 'Poll duration' },\n  switchToMultiple: { id: 'compose_form.poll.switch_to_multiple', defaultMessage: 'Change poll to allow multiple choices' },\n  switchToSingle: { id: 'compose_form.poll.switch_to_single', defaultMessage: 'Change poll to allow for a single choice' },\n  minutes: { id: 'intervals.full.minutes', defaultMessage: '{number, plural, one {# minute} other {# minutes}}' },\n  hours: { id: 'intervals.full.hours', defaultMessage: '{number, plural, one {# hour} other {# hours}}' },\n  days: { id: 'intervals.full.days', defaultMessage: '{number, plural, one {# day} other {# days}}' },\n});\n\n@injectIntl\nclass Option extends React.PureComponent {\n\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    isPollMultiple: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onToggleMultiple: PropTypes.func.isRequired,\n    suggestions: ImmutablePropTypes.list,\n    onClearSuggestions: PropTypes.func.isRequired,\n    onFetchSuggestions: PropTypes.func.isRequired,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleOptionTitleChange = e => {\n    this.props.onChange(this.props.index, e.target.value);\n  };\n\n  handleOptionRemove = () => {\n    this.props.onRemove(this.props.index);\n  };\n\n\n  handleToggleMultiple = e => {\n    this.props.onToggleMultiple();\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  handleCheckboxKeypress = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      this.handleToggleMultiple(e);\n    }\n  }\n\n  onSuggestionsClearRequested = () => {\n    this.props.onClearSuggestions();\n  }\n\n  onSuggestionsFetchRequested = (token) => {\n    this.props.onFetchSuggestions(token);\n  }\n\n  onSuggestionSelected = (tokenStart, token, value) => {\n    this.props.onSuggestionSelected(tokenStart, token, value, ['poll', 'options', this.props.index]);\n  }\n\n  render () {\n    const { isPollMultiple, title, index, autoFocus, intl } = this.props;\n\n    return (\n      <li>\n        <label className='poll__option editable'>\n          <span\n            className={classNames('poll__input', { checkbox: isPollMultiple })}\n            onClick={this.handleToggleMultiple}\n            onKeyPress={this.handleCheckboxKeypress}\n            role='button'\n            tabIndex='0'\n            title={intl.formatMessage(isPollMultiple ? messages.switchToSingle : messages.switchToMultiple)}\n            aria-label={intl.formatMessage(isPollMultiple ? messages.switchToSingle : messages.switchToMultiple)}\n          />\n\n          <AutosuggestInput\n            placeholder={intl.formatMessage(messages.option_placeholder, { number: index + 1 })}\n            maxLength={100}\n            value={title}\n            onChange={this.handleOptionTitleChange}\n            suggestions={this.props.suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            onSuggestionSelected={this.onSuggestionSelected}\n            searchTokens={[':']}\n            autoFocus={autoFocus}\n          />\n        </label>\n\n        <div className='poll__cancel'>\n          <IconButton disabled={index <= 1} title={intl.formatMessage(messages.remove_option)} icon='times' onClick={this.handleOptionRemove} />\n        </div>\n      </li>\n    );\n  }\n\n}\n\nexport default\n@injectIntl\nclass PollForm extends ImmutablePureComponent {\n\n  static propTypes = {\n    options: ImmutablePropTypes.list,\n    expiresIn: PropTypes.number,\n    isMultiple: PropTypes.bool,\n    onChangeOption: PropTypes.func.isRequired,\n    onAddOption: PropTypes.func.isRequired,\n    onRemoveOption: PropTypes.func.isRequired,\n    onChangeSettings: PropTypes.func.isRequired,\n    suggestions: ImmutablePropTypes.list,\n    onClearSuggestions: PropTypes.func.isRequired,\n    onFetchSuggestions: PropTypes.func.isRequired,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleAddOption = () => {\n    this.props.onAddOption('');\n  };\n\n  handleSelectDuration = e => {\n    this.props.onChangeSettings(e.target.value, this.props.isMultiple);\n  };\n\n  handleToggleMultiple = () => {\n    this.props.onChangeSettings(this.props.expiresIn, !this.props.isMultiple);\n  };\n\n  render () {\n    const { options, expiresIn, isMultiple, onChangeOption, onRemoveOption, intl, ...other } = this.props;\n\n    if (!options) {\n      return null;\n    }\n\n    const autoFocusIndex = options.indexOf('');\n\n    return (\n      <div className='compose-form__poll-wrapper'>\n        <ul>\n          {options.map((title, i) => <Option title={title} key={i} index={i} onChange={onChangeOption} onRemove={onRemoveOption} isPollMultiple={isMultiple} onToggleMultiple={this.handleToggleMultiple} autoFocus={i === autoFocusIndex} {...other} />)}\n        </ul>\n\n        <div className='poll__footer'>\n          <button disabled={options.size >= 5} className='button button-secondary' onClick={this.handleAddOption}><Icon id='plus' /> <FormattedMessage {...messages.add_option} /></button>\n\n          {/* eslint-disable-next-line jsx-a11y/no-onchange */}\n          <select value={expiresIn} onChange={this.handleSelectDuration}>\n            <option value={300}>{intl.formatMessage(messages.minutes, { number: 5 })}</option>\n            <option value={1800}>{intl.formatMessage(messages.minutes, { number: 30 })}</option>\n            <option value={3600}>{intl.formatMessage(messages.hours, { number: 1 })}</option>\n            <option value={21600}>{intl.formatMessage(messages.hours, { number: 6 })}</option>\n            <option value={86400}>{intl.formatMessage(messages.days, { number: 1 })}</option>\n            <option value={259200}>{intl.formatMessage(messages.days, { number: 3 })}</option>\n            <option value={604800}>{intl.formatMessage(messages.days, { number: 7 })}</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport PollForm from '../components/poll_form';\nimport { addPollOption, removePollOption, changePollOption, changePollSettings } from '../../../actions/compose';\nimport {\n  clearComposeSuggestions,\n  fetchComposeSuggestions,\n  selectComposeSuggestion,\n} from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  suggestions: state.getIn(['compose', 'suggestions']),\n  options: state.getIn(['compose', 'poll', 'options']),\n  expiresIn: state.getIn(['compose', 'poll', 'expires_in']),\n  isMultiple: state.getIn(['compose', 'poll', 'multiple']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddOption(title) {\n    dispatch(addPollOption(title));\n  },\n\n  onRemoveOption(index) {\n    dispatch(removePollOption(index));\n  },\n\n  onChangeOption(index, title) {\n    dispatch(changePollOption(index, title));\n  },\n\n  onChangeSettings(expiresIn, isMultiple) {\n    dispatch(changePollSettings(expiresIn, isMultiple));\n  },\n\n  onClearSuggestions () {\n    dispatch(clearComposeSuggestions());\n  },\n\n  onFetchSuggestions (token) {\n    dispatch(fetchComposeSuggestions(token));\n  },\n\n  onSuggestionSelected (position, token, accountId, path) {\n    dispatch(selectComposeSuggestion(position, token, accountId, path));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PollForm);\n","import { connect } from 'react-redux';\nimport UploadProgress from '../components/upload_progress';\n\nconst mapStateToProps = state => ({\n  active: state.getIn(['compose', 'is_uploading']),\n  progress: state.getIn(['compose', 'progress']),\n});\n\nexport default connect(mapStateToProps)(UploadProgress);\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { FormattedMessage } from 'react-intl';\nimport Icon from 'mastodon/components/icon';\n\nexport default class Upload extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n    onUndo: PropTypes.func.isRequired,\n    onOpenFocalPoint: PropTypes.func.isRequired,\n    isEditingStatus: PropTypes.func.isRequired,\n  };\n\n  handleUndoClick = e => {\n    e.stopPropagation();\n    this.props.onUndo(this.props.media.get('id'));\n  }\n\n  handleFocalPointClick = e => {\n    e.stopPropagation();\n    this.props.onOpenFocalPoint(this.props.media.get('id'));\n  }\n\n  render () {\n    const { media, isEditingStatus } = this.props;\n    const focusX = media.getIn(['meta', 'focus', 'x']);\n    const focusY = media.getIn(['meta', 'focus', 'y']);\n    const x = ((focusX /  2) + .5) * 100;\n    const y = ((focusY / -2) + .5) * 100;\n\n    return (\n      <div className='compose-form__upload' tabIndex='0' role='button'>\n        <Motion defaultStyle={{ scale: 0.8 }} style={{ scale: spring(1, { stiffness: 180, damping: 12 }) }}>\n          {({ scale }) => (\n            <div className='compose-form__upload-thumbnail' style={{ transform: `scale(${scale})`, backgroundImage: `url(${media.get('preview_url')})`, backgroundPosition: `${x}% ${y}%` }}>\n              <div className='compose-form__upload__actions'>\n                <button className='icon-button' onClick={this.handleUndoClick}><Icon id='times' /> <FormattedMessage id='upload_form.undo' defaultMessage='Delete' /></button>\n                {!isEditingStatus && (<button className='icon-button' onClick={this.handleFocalPointClick}><Icon id='pencil' /> <FormattedMessage id='upload_form.edit' defaultMessage='Edit' /></button>)}\n              </div>\n\n              {(media.get('description') || '').length === 0 && (\n                <div className='compose-form__upload__warning'>\n                  <button className='icon-button' onClick={this.handleFocalPointClick}><Icon id='info-circle' /> <FormattedMessage id='upload_form.description_missing' defaultMessage='No description added' /></button>\n                </div>\n              )}\n            </div>\n          )}\n        </Motion>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport Upload from '../components/upload';\nimport { undoUploadCompose, initMediaEditModal } from '../../../actions/compose';\nimport { submitCompose } from '../../../actions/compose';\n\nconst mapStateToProps = (state, { id }) => ({\n  media: state.getIn(['compose', 'media_attachments']).find(item => item.get('id') === id),\n  isEditingStatus: state.getIn(['compose', 'id']) !== null,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onUndo: id => {\n    dispatch(undoUploadCompose(id));\n  },\n\n  onOpenFocalPoint: id => {\n    dispatch(initMediaEditModal(id));\n  },\n\n  onSubmit (router) {\n    dispatch(submitCompose(router));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { changeComposeSensitivity } from 'mastodon/actions/compose';\nimport { injectIntl, defineMessages, FormattedMessage } from 'react-intl';\n\nconst messages = defineMessages({\n  marked: {\n    id: 'compose_form.sensitive.marked',\n    defaultMessage: '{count, plural, one {Media is marked as sensitive} other {Media is marked as sensitive}}',\n  },\n  unmarked: {\n    id: 'compose_form.sensitive.unmarked',\n    defaultMessage: '{count, plural, one {Media is not marked as sensitive} other {Media is not marked as sensitive}}',\n  },\n});\n\nconst mapStateToProps = state => ({\n  active: state.getIn(['compose', 'sensitive']),\n  disabled: state.getIn(['compose', 'spoiler']),\n  mediaCount: state.getIn(['compose', 'media_attachments']).size,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch(changeComposeSensitivity());\n  },\n\n});\n\nclass SensitiveButton extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    mediaCount: PropTypes.number,\n    onClick: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { active, disabled, mediaCount, onClick, intl } = this.props;\n\n    return (\n      <div className='compose-form__sensitive-button'>\n        <label className={classNames('icon-button', { active })} title={intl.formatMessage(active ? messages.marked : messages.unmarked, { count: mediaCount })}>\n          <input\n            name='mark-sensitive'\n            type='checkbox'\n            checked={active}\n            onChange={onClick}\n            disabled={disabled}\n          />\n\n          <span className={classNames('checkbox', { active })} />\n\n          <FormattedMessage\n            id='compose_form.sensitive.hide'\n            defaultMessage='{count, plural, one {Mark media as sensitive} other {Mark media as sensitive}}'\n            values={{ count: mediaCount }}\n          />\n        </label>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(SensitiveButton));\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport UploadProgressContainer from '../containers/upload_progress_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport UploadContainer from '../containers/upload_container';\nimport SensitiveButtonContainer from '../containers/sensitive_button_container';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class UploadForm extends ImmutablePureComponent {\n\n  static propTypes = {\n    mediaIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  render () {\n    const { mediaIds } = this.props;\n\n    return (\n      <div className='compose-form__upload-wrapper'>\n        <UploadProgressContainer icon='upload' message={<FormattedMessage id='upload_progress.label' defaultMessage='Uploading…' />} />\n\n        <div className='compose-form__uploads-wrapper'>\n          {mediaIds.map(id => (\n            <UploadContainer id={id} key={id} />\n          ))}\n        </div>\n\n        {!mediaIds.isEmpty() && <SensitiveButtonContainer />}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport UploadForm from '../components/upload_form';\n\nconst mapStateToProps = state => ({\n  mediaIds: state.getIn(['compose', 'media_attachments']).map(item => item.get('id')),\n});\n\nexport default connect(mapStateToProps)(UploadForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\n\nexport default class Warning extends React.PureComponent {\n\n  static propTypes = {\n    message: PropTypes.node.isRequired,\n  };\n\n  render () {\n    const { message } = this.props;\n\n    return (\n      <Motion defaultStyle={{ opacity: 0, scaleX: 0.85, scaleY: 0.75 }} style={{ opacity: spring(1, { damping: 35, stiffness: 400 }), scaleX: spring(1, { damping: 35, stiffness: 400 }), scaleY: spring(1, { damping: 35, stiffness: 400 }) }}>\n        {({ opacity, scaleX, scaleY }) => (\n          <div className='compose-form__warning' style={{ opacity: opacity, transform: `scale(${scaleX}, ${scaleY})` }}>\n            {message}\n          </div>\n        )}\n      </Motion>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Warning from '../components/warning';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { me } from '../../../initial_state';\n\nconst buildHashtagRE = () => {\n  try {\n    const HASHTAG_SEPARATORS = '_\\\\u00b7\\\\u200c';\n    const ALPHA = '\\\\p{L}\\\\p{M}';\n    const WORD = '\\\\p{L}\\\\p{M}\\\\p{N}\\\\p{Pc}';\n    return new RegExp(\n      '(?:^|[^\\\\/\\\\)\\\\w])#((' +\n      '[' + WORD + '_]' +\n      '[' + WORD + HASHTAG_SEPARATORS + ']*' +\n      '[' + ALPHA + HASHTAG_SEPARATORS + ']' +\n      '[' + WORD + HASHTAG_SEPARATORS +']*' +\n      '[' + WORD + '_]' +\n      ')|(' +\n      '[' + WORD + '_]*' +\n      '[' + ALPHA + ']' +\n      '[' + WORD + '_]*' +\n      '))', 'iu',\n    );\n  } catch {\n    return /(?:^|[^\\/\\)\\w])#(\\w*[a-zA-Z·]\\w*)/i;\n  }\n};\n\nconst APPROX_HASHTAG_RE = buildHashtagRE();\n\nconst mapStateToProps = state => ({\n  needsLockWarning: state.getIn(['compose', 'privacy']) === 'private' && !state.getIn(['accounts', me, 'locked']),\n  hashtagWarning: state.getIn(['compose', 'privacy']) !== 'public' && APPROX_HASHTAG_RE.test(state.getIn(['compose', 'text'])),\n  directMessageWarning: state.getIn(['compose', 'privacy']) === 'direct',\n});\n\nconst WarningWrapper = ({ needsLockWarning, hashtagWarning, directMessageWarning }) => {\n  if (needsLockWarning) {\n    return <Warning message={<FormattedMessage id='compose_form.lock_disclaimer' defaultMessage='Your account is not {locked}. Anyone can follow you to view your follower-only posts.' values={{ locked: <a href='/settings/profile'><FormattedMessage id='compose_form.lock_disclaimer.lock' defaultMessage='locked' /></a> }} />} />;\n  }\n\n  if (hashtagWarning) {\n    return <Warning message={<FormattedMessage id='compose_form.hashtag_warning' defaultMessage=\"This post won't be listed under any hashtag as it is unlisted. Only public posts can be searched by hashtag.\" />} />;\n  }\n\n  if (directMessageWarning) {\n    const message = (\n      <span>\n        <FormattedMessage id='compose_form.encryption_warning' defaultMessage='Posts on Mastodon are not end-to-end encrypted. Do not share any dangerous information over Mastodon.' /> <a href='/terms' target='_blank'><FormattedMessage id='compose_form.direct_message_warning_learn_more' defaultMessage='Learn more' /></a>\n      </span>\n    );\n\n    return <Warning message={message} />;\n  }\n\n  return null;\n};\n\nWarningWrapper.propTypes = {\n  needsLockWarning: PropTypes.bool,\n  hashtagWarning: PropTypes.bool,\n  directMessageWarning: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps)(WarningWrapper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport TextIconButton from './text_icon_button';\nimport Overlay from 'react-overlays/lib/Overlay';\nimport Motion from 'mastodon/features/ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport classNames from 'classnames';\nimport { languages as preloadedLanguages } from 'mastodon/initial_state';\nimport fuzzysort from 'fuzzysort';\n\nconst messages = defineMessages({\n  changeLanguage: { id: 'compose.language.change', defaultMessage: 'Change language' },\n  search: { id: 'compose.language.search', defaultMessage: 'Search languages...' },\n  clear: { id: 'emoji_button.clear', defaultMessage: 'Clear' },\n});\n\n// Copied from emoji-mart for consistency with emoji picker and since\n// they don't export the icons in the package\nconst icons = {\n  loupe: (\n    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' width='13' height='13'>\n      <path d='M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z' />\n    </svg>\n  ),\n\n  delete: (\n    <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' width='13' height='13'>\n      <path d='M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z' />\n    </svg>\n  ),\n};\n\nconst listenerOptions = supportsPassiveEvents ? { passive: true } : false;\n\nclass LanguageDropdownMenu extends React.PureComponent {\n\n  static propTypes = {\n    style: PropTypes.object,\n    value: PropTypes.string.isRequired,\n    frequentlyUsedLanguages: PropTypes.arrayOf(PropTypes.string).isRequired,\n    placement: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    languages: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n    intl: PropTypes.object,\n  };\n\n  static defaultProps = {\n    languages: preloadedLanguages,\n  };\n\n  state = {\n    mounted: false,\n    searchValue: '',\n  };\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  }\n\n  componentDidMount () {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n    this.setState({ mounted: true });\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  setListRef = c => {\n    this.listNode = c;\n  }\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchValue: target.value });\n  }\n\n  search () {\n    const { languages, value, frequentlyUsedLanguages } = this.props;\n    const { searchValue } = this.state;\n\n    if (searchValue === '') {\n      return [...languages].sort((a, b) => {\n        // Push current selection to the top of the list\n\n        if (a[0] === value) {\n          return -1;\n        } else if (b[0] === value) {\n          return 1;\n        } else {\n          // Sort according to frequently used languages\n\n          const indexOfA = frequentlyUsedLanguages.indexOf(a[0]);\n          const indexOfB = frequentlyUsedLanguages.indexOf(b[0]);\n\n          return ((indexOfA > -1 ? indexOfA : Infinity) - (indexOfB > -1 ? indexOfB : Infinity));\n        }\n      });\n    }\n\n    return fuzzysort.go(searchValue, languages, {\n      keys: ['0', '1', '2'],\n      limit: 5,\n      threshold: -10000,\n    }).map(result => result.obj);\n  }\n\n  frequentlyUsed () {\n    const { languages, value } = this.props;\n    const current = languages.find(lang => lang[0] === value);\n    const results = [];\n\n    if (current) {\n      results.push(current);\n    }\n\n    return results;\n  }\n\n  handleClick = e => {\n    const value = e.currentTarget.getAttribute('data-index');\n\n    e.preventDefault();\n\n    this.props.onClose();\n    this.props.onChange(value);\n  }\n\n  handleKeyDown = e => {\n    const { onClose } = this.props;\n    const index = Array.from(this.listNode.childNodes).findIndex(node => node === e.currentTarget);\n\n    let element = null;\n\n    switch(e.key) {\n    case 'Escape':\n      onClose();\n      break;\n    case 'Enter':\n      this.handleClick(e);\n      break;\n    case 'ArrowDown':\n      element = this.listNode.childNodes[index + 1] || this.listNode.firstChild;\n      break;\n    case 'ArrowUp':\n      element = this.listNode.childNodes[index - 1] || this.listNode.lastChild;\n      break;\n    case 'Tab':\n      if (e.shiftKey) {\n        element = this.listNode.childNodes[index - 1] || this.listNode.lastChild;\n      } else {\n        element = this.listNode.childNodes[index + 1] || this.listNode.firstChild;\n      }\n      break;\n    case 'Home':\n      element = this.listNode.firstChild;\n      break;\n    case 'End':\n      element = this.listNode.lastChild;\n      break;\n    }\n\n    if (element) {\n      element.focus();\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  handleSearchKeyDown = e => {\n    const { onChange, onClose } = this.props;\n    const { searchValue } = this.state;\n\n    let element = null;\n\n    switch(e.key) {\n    case 'Tab':\n    case 'ArrowDown':\n      element = this.listNode.firstChild;\n\n      if (element) {\n        element.focus();\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      break;\n    case 'Enter':\n      element = this.listNode.firstChild;\n\n      if (element) {\n        onChange(element.getAttribute('data-index'));\n        onClose();\n      }\n      break;\n    case 'Escape':\n      if (searchValue !== '') {\n        e.preventDefault();\n        this.handleClear();\n      }\n\n      break;\n    }\n  }\n\n  handleClear = () => {\n    this.setState({ searchValue: '' });\n  }\n\n  renderItem = lang => {\n    const { value } = this.props;\n\n    return (\n      <div key={lang[0]} role='option' tabIndex='0' data-index={lang[0]} className={classNames('language-dropdown__dropdown__results__item', { active: lang[0] === value })} aria-selected={lang[0] === value} onClick={this.handleClick} onKeyDown={this.handleKeyDown}>\n        <span className='language-dropdown__dropdown__results__item__native-name'>{lang[2]}</span> <span className='language-dropdown__dropdown__results__item__common-name'>({lang[1]})</span>\n      </div>\n    );\n  }\n\n  render () {\n    const { style, placement, intl } = this.props;\n    const { mounted, searchValue } = this.state;\n    const isSearching = searchValue !== '';\n    const results = this.search();\n\n    return (\n      <Motion defaultStyle={{ opacity: 0, scaleX: 0.85, scaleY: 0.75 }} style={{ opacity: spring(1, { damping: 35, stiffness: 400 }), scaleX: spring(1, { damping: 35, stiffness: 400 }), scaleY: spring(1, { damping: 35, stiffness: 400 }) }}>\n        {({ opacity, scaleX, scaleY }) => (\n          // It should not be transformed when mounting because the resulting\n          // size will be used to determine the coordinate of the menu by\n          // react-overlays\n          <div className={`language-dropdown__dropdown ${placement}`} style={{ ...style, opacity: opacity, transform: mounted ? `scale(${scaleX}, ${scaleY})` : null }} ref={this.setRef}>\n            <div className='emoji-mart-search'>\n              <input type='search' value={searchValue} onChange={this.handleSearchChange} onKeyDown={this.handleSearchKeyDown} placeholder={intl.formatMessage(messages.search)} autoFocus />\n              <button className='emoji-mart-search-icon' disabled={!isSearching} aria-label={intl.formatMessage(messages.clear)} onClick={this.handleClear}>{!isSearching ? icons.loupe : icons.delete}</button>\n            </div>\n\n            <div className='language-dropdown__dropdown__results emoji-mart-scroll' role='listbox' ref={this.setListRef}>\n              {results.map(this.renderItem)}\n            </div>\n          </div>\n        )}\n      </Motion>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass LanguageDropdown extends React.PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string,\n    frequentlyUsedLanguages: PropTypes.arrayOf(PropTypes.string),\n    intl: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onClose: PropTypes.func,\n  };\n\n  state = {\n    open: false,\n    placement: 'bottom',\n  };\n\n  handleToggle = ({ target }) => {\n    const { top } = target.getBoundingClientRect();\n\n    if (this.state.open && this.activeElement) {\n      this.activeElement.focus({ preventScroll: true });\n    }\n\n    this.setState({ placement: top * 2 < innerHeight ? 'bottom' : 'top' });\n    this.setState({ open: !this.state.open });\n  }\n\n  handleClose = () => {\n    const { value, onClose } = this.props;\n\n    if (this.state.open && this.activeElement) {\n      this.activeElement.focus({ preventScroll: true });\n    }\n\n    this.setState({ open: false });\n    onClose(value);\n  }\n\n  handleChange = value => {\n    const { onChange } = this.props;\n    onChange(value);\n  }\n\n  render () {\n    const { value, intl, frequentlyUsedLanguages } = this.props;\n    const { open, placement } = this.state;\n\n    return (\n      <div className={classNames('privacy-dropdown', { active: open })}>\n        <div className='privacy-dropdown__value'>\n          <TextIconButton\n            className='privacy-dropdown__value-icon'\n            label={value && value.toUpperCase()}\n            title={intl.formatMessage(messages.changeLanguage)}\n            active={open}\n            onClick={this.handleToggle}\n          />\n        </div>\n\n        <Overlay show={open} placement={placement} target={this}>\n          <LanguageDropdownMenu\n            value={value}\n            frequentlyUsedLanguages={frequentlyUsedLanguages}\n            onClose={this.handleClose}\n            onChange={this.handleChange}\n            placement={placement}\n            intl={intl}\n          />\n        </Overlay>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport LanguageDropdown from '../components/language_dropdown';\nimport { changeComposeLanguage } from 'mastodon/actions/compose';\nimport { useLanguage } from 'mastodon/actions/languages';\nimport { createSelector } from 'reselect';\nimport { Map as ImmutableMap } from 'immutable';\n\nconst getFrequentlyUsedLanguages = createSelector([\n  state => state.getIn(['settings', 'frequentlyUsedLanguages'], ImmutableMap()),\n], languageCounters => (\n  languageCounters.keySeq()\n    .sort((a, b) => languageCounters.get(a) - languageCounters.get(b))\n    .reverse()\n    .toArray()\n));\n\nconst mapStateToProps = state => ({\n  frequentlyUsedLanguages: getFrequentlyUsedLanguages(state),\n  value: state.getIn(['compose', 'language']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onChange (value) {\n    dispatch(changeComposeLanguage(value));\n  },\n\n  onClose (value) {\n    dispatch(useLanguage(value));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageDropdown);\n","import regexSupplant from 'twitter-text/dist/lib/regexSupplant';\nimport validUrlPrecedingChars from 'twitter-text/dist/regexp/validUrlPrecedingChars';\nimport validDomain from 'twitter-text/dist/regexp/validDomain';\nimport validPortNumber from 'twitter-text/dist/regexp/validPortNumber';\nimport validUrlPath from 'twitter-text/dist/regexp/validUrlPath';\nimport validUrlQueryChars from 'twitter-text/dist/regexp/validUrlQueryChars';\nimport validUrlQueryEndingChars from 'twitter-text/dist/regexp/validUrlQueryEndingChars';\n\n// The difference with twitter-text's extractURL is that the protocol isn't\n// optional.\n\nexport const urlRegex = regexSupplant(\n  '('                                                          + // $1 URL\n    '(#{validUrlPrecedingChars})'                              + // $2\n    '(https?:\\\\/\\\\/)'                                          + // $3 Protocol\n    '(#{validDomain})'                                         + // $4 Domain(s)\n    '(?::(#{validPortNumber}))?'                               + // $5 Port number (optional)\n    '(\\\\/#{validUrlPath}*)?'                                   + // $6 URL Path\n    '(\\\\?#{validUrlQueryChars}*#{validUrlQueryEndingChars})?'  + // $7 Query String\n  ')',\n  {\n    validUrlPrecedingChars,\n    validDomain,\n    validPortNumber,\n    validUrlPath,\n    validUrlQueryChars,\n    validUrlQueryEndingChars,\n  },\n  'gi',\n);\n","import React from 'react';\nimport CharacterCounter from './character_counter';\nimport Button from '../../../components/button';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ReplyIndicatorContainer from '../containers/reply_indicator_container';\nimport AutosuggestTextarea from '../../../components/autosuggest_textarea';\nimport AutosuggestInput from '../../../components/autosuggest_input';\nimport PollButtonContainer from '../containers/poll_button_container';\nimport UploadButtonContainer from '../containers/upload_button_container';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport SpoilerButtonContainer from '../containers/spoiler_button_container';\nimport PrivacyDropdownContainer from '../containers/privacy_dropdown_container';\nimport EmojiPickerDropdown from '../containers/emoji_picker_dropdown_container';\nimport PollFormContainer from '../containers/poll_form_container';\nimport UploadFormContainer from '../containers/upload_form_container';\nimport WarningContainer from '../containers/warning_container';\nimport LanguageDropdown from '../containers/language_dropdown_container';\nimport { isMobile } from '../../../is_mobile';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { length } from 'stringz';\nimport { countableText } from '../util/counter';\nimport Icon from 'mastodon/components/icon';\nimport { maxChars } from '../../../initial_state';\n\nconst allowedAroundShortCode = '><\\u0085\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029\\u0009\\u000a\\u000b\\u000c\\u000d';\n\nconst messages = defineMessages({\n  placeholder: { id: 'compose_form.placeholder', defaultMessage: 'What is on your mind?' },\n  spoiler_placeholder: { id: 'compose_form.spoiler_placeholder', defaultMessage: 'Write your warning here' },\n  publish: { id: 'compose_form.publish', defaultMessage: 'Publish' },\n  publishLoud: { id: 'compose_form.publish_loud', defaultMessage: '{publish}!' },\n  saveChanges: { id: 'compose_form.save_changes', defaultMessage: 'Save changes' },\n});\n\nexport default @injectIntl\nclass ComposeForm extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    text: PropTypes.string.isRequired,\n    suggestions: ImmutablePropTypes.list,\n    spoiler: PropTypes.bool,\n    privacy: PropTypes.string,\n    spoilerText: PropTypes.string,\n    focusDate: PropTypes.instanceOf(Date),\n    caretPosition: PropTypes.number,\n    preselectDate: PropTypes.instanceOf(Date),\n    isSubmitting: PropTypes.bool,\n    isChangingUpload: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    isUploading: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onClearSuggestions: PropTypes.func.isRequired,\n    onFetchSuggestions: PropTypes.func.isRequired,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    onChangeSpoilerText: PropTypes.func.isRequired,\n    onPaste: PropTypes.func.isRequired,\n    onPickEmoji: PropTypes.func.isRequired,\n    showSearch: PropTypes.bool,\n    anyMedia: PropTypes.bool,\n    isInReply: PropTypes.bool,\n    singleColumn: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    showSearch: false,\n  };\n\n  handleChange = (e) => {\n    this.props.onChange(e.target.value);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 13 && (e.ctrlKey || e.metaKey)) {\n      this.handleSubmit();\n    }\n  }\n\n  getFulltextForCharacterCounting = () => {\n    return [this.props.spoiler? this.props.spoilerText: '', countableText(this.props.text)].join('');\n  }\n\n  canSubmit = () => {\n    const { isSubmitting, isChangingUpload, isUploading, anyMedia } = this.props;\n    const fulltext = this.getFulltextForCharacterCounting();\n    const isOnlyWhitespace = fulltext.length !== 0 && fulltext.trim().length === 0;\n\n    return !(isSubmitting || isUploading || isChangingUpload || length(fulltext) > maxChars || (isOnlyWhitespace && !anyMedia));\n  }\n\n  handleSubmit = () => {\n    if (this.props.text !== this.autosuggestTextarea.textarea.value) {\n      // Something changed the text inside the textarea (e.g. browser extensions like Grammarly)\n      // Update the state to match the current text\n      this.props.onChange(this.autosuggestTextarea.textarea.value);\n    }\n\n    if (!this.canSubmit()) {\n      return;\n    }\n\n    this.props.onSubmit(this.context.router ? this.context.router.history : null);\n  }\n\n  onSuggestionsClearRequested = () => {\n    this.props.onClearSuggestions();\n  }\n\n  onSuggestionsFetchRequested = (token) => {\n    this.props.onFetchSuggestions(token);\n  }\n\n  onSuggestionSelected = (tokenStart, token, value) => {\n    this.props.onSuggestionSelected(tokenStart, token, value, ['text']);\n  }\n\n  onSpoilerSuggestionSelected = (tokenStart, token, value) => {\n    this.props.onSuggestionSelected(tokenStart, token, value, ['spoiler_text']);\n  }\n\n  handleChangeSpoilerText = (e) => {\n    this.props.onChangeSpoilerText(e.target.value);\n  }\n\n  handleFocus = () => {\n    if (this.composeForm && !this.props.singleColumn) {\n      const { left, right } = this.composeForm.getBoundingClientRect();\n      if (left < 0 || right > (window.innerWidth || document.documentElement.clientWidth)) {\n        this.composeForm.scrollIntoView();\n      }\n    }\n  }\n\n  componentDidMount () {\n    this._updateFocusAndSelection({ });\n  }\n\n  componentDidUpdate (prevProps) {\n    this._updateFocusAndSelection(prevProps);\n  }\n\n  _updateFocusAndSelection = (prevProps) => {\n    // This statement does several things:\n    // - If we're beginning a reply, and,\n    //     - Replying to zero or one users, places the cursor at the end of the textbox.\n    //     - Replying to more than one user, selects any usernames past the first;\n    //       this provides a convenient shortcut to drop everyone else from the conversation.\n    if (this.props.focusDate !== prevProps.focusDate) {\n      let selectionEnd, selectionStart;\n\n      if (this.props.preselectDate !== prevProps.preselectDate && this.props.isInReply) {\n        selectionEnd   = this.props.text.length;\n        selectionStart = this.props.text.search(/\\s/) + 1;\n      } else if (typeof this.props.caretPosition === 'number') {\n        selectionStart = this.props.caretPosition;\n        selectionEnd   = this.props.caretPosition;\n      } else {\n        selectionEnd   = this.props.text.length;\n        selectionStart = selectionEnd;\n      }\n\n      // Because of the wicg-inert polyfill, the activeElement may not be\n      // immediately selectable, we have to wait for observers to run, as\n      // described in https://github.com/WICG/inert#performance-and-gotchas\n      Promise.resolve().then(() => {\n        this.autosuggestTextarea.textarea.setSelectionRange(selectionStart, selectionEnd);\n        this.autosuggestTextarea.textarea.focus();\n      }).catch(console.error);\n    } else if(prevProps.isSubmitting && !this.props.isSubmitting) {\n      this.autosuggestTextarea.textarea.focus();\n    } else if (this.props.spoiler !== prevProps.spoiler) {\n      if (this.props.spoiler) {\n        this.spoilerText.input.focus();\n      } else {\n        this.autosuggestTextarea.textarea.focus();\n      }\n    }\n  }\n\n  setAutosuggestTextarea = (c) => {\n    this.autosuggestTextarea = c;\n  }\n\n  setSpoilerText = (c) => {\n    this.spoilerText = c;\n  }\n\n  setRef = c => {\n    this.composeForm = c;\n  };\n\n  handleEmojiPick = (data) => {\n    const { text }     = this.props;\n    const position     = this.autosuggestTextarea.textarea.selectionStart;\n    const needsSpace   = data.custom && position > 0 && !allowedAroundShortCode.includes(text[position - 1]);\n\n    this.props.onPickEmoji(position, data, needsSpace);\n  }\n\n  render () {\n    const { intl, onPaste, showSearch } = this.props;\n    const disabled = this.props.isSubmitting;\n\n    let publishText = '';\n\n    if (this.props.isEditing) {\n      publishText = intl.formatMessage(messages.saveChanges);\n    } else if (this.props.privacy === 'private' || this.props.privacy === 'direct') {\n      publishText = <span className='compose-form__publish-private'><Icon id='lock' /> {intl.formatMessage(messages.publish)}</span>;\n    } else {\n      publishText = this.props.privacy !== 'unlisted' ? intl.formatMessage(messages.publishLoud, { publish: intl.formatMessage(messages.publish) }) : intl.formatMessage(messages.publish);\n    }\n\n    return (\n      <div className='compose-form'>\n        <WarningContainer />\n\n        <ReplyIndicatorContainer />\n\n        <div className={`spoiler-input ${this.props.spoiler ? 'spoiler-input--visible' : ''}`} ref={this.setRef}>\n          <AutosuggestInput\n            placeholder={intl.formatMessage(messages.spoiler_placeholder)}\n            value={this.props.spoilerText}\n            onChange={this.handleChangeSpoilerText}\n            onKeyDown={this.handleKeyDown}\n            disabled={!this.props.spoiler}\n            ref={this.setSpoilerText}\n            suggestions={this.props.suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            onSuggestionSelected={this.onSpoilerSuggestionSelected}\n            searchTokens={[':']}\n            id='cw-spoiler-input'\n            className='spoiler-input__input'\n          />\n        </div>\n\n        <AutosuggestTextarea\n          ref={this.setAutosuggestTextarea}\n          placeholder={intl.formatMessage(messages.placeholder)}\n          disabled={disabled}\n          value={this.props.text}\n          onChange={this.handleChange}\n          suggestions={this.props.suggestions}\n          onFocus={this.handleFocus}\n          onKeyDown={this.handleKeyDown}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          onSuggestionSelected={this.onSuggestionSelected}\n          onPaste={onPaste}\n          autoFocus={!showSearch && !isMobile(window.innerWidth)}\n        >\n          <EmojiPickerDropdown onPickEmoji={this.handleEmojiPick} />\n\n          <div className='compose-form__modifiers'>\n            <UploadFormContainer />\n            <PollFormContainer />\n          </div>\n        </AutosuggestTextarea>\n\n        <div className='compose-form__buttons-wrapper'>\n          <div className='compose-form__buttons'>\n            <UploadButtonContainer />\n            <PollButtonContainer />\n            <PrivacyDropdownContainer disabled={this.props.isEditing} />\n            <SpoilerButtonContainer />\n            <LanguageDropdown />\n          </div>\n\n          <div className='character-counter__wrapper'>\n            <CharacterCounter max={maxChars} text={this.getFulltextForCharacterCounting()} />\n          </div>\n        </div>\n\n        <div className='compose-form__publish'>\n          <div className='compose-form__publish-button-wrapper'>\n            <Button text={publishText} onClick={this.handleSubmit} disabled={!this.canSubmit()} block />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import { urlRegex } from './url_regex';\n\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\n\nexport function countableText(inputText) {\n  return inputText\n    .replace(urlRegex, urlPlaceholder)\n    .replace(/(^|[^\\/\\w])@(([a-z0-9_]+)@[a-z0-9\\.\\-]+[a-z0-9]+)/ig, '$1@$3');\n};\n","import { connect } from 'react-redux';\nimport ComposeForm from '../components/compose_form';\nimport {\n  changeCompose,\n  submitCompose,\n  clearComposeSuggestions,\n  fetchComposeSuggestions,\n  selectComposeSuggestion,\n  changeComposeSpoilerText,\n  insertEmojiCompose,\n  uploadCompose,\n} from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  text: state.getIn(['compose', 'text']),\n  suggestions: state.getIn(['compose', 'suggestions']),\n  spoiler: state.getIn(['compose', 'spoiler']),\n  spoilerText: state.getIn(['compose', 'spoiler_text']),\n  privacy: state.getIn(['compose', 'privacy']),\n  focusDate: state.getIn(['compose', 'focusDate']),\n  caretPosition: state.getIn(['compose', 'caretPosition']),\n  preselectDate: state.getIn(['compose', 'preselectDate']),\n  isSubmitting: state.getIn(['compose', 'is_submitting']),\n  isEditing: state.getIn(['compose', 'id']) !== null,\n  isChangingUpload: state.getIn(['compose', 'is_changing_upload']),\n  isUploading: state.getIn(['compose', 'is_uploading']),\n  showSearch: state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']),\n  anyMedia: state.getIn(['compose', 'media_attachments']).size > 0,\n  isInReply: state.getIn(['compose', 'in_reply_to']) !== null,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n  onChange (text) {\n    dispatch(changeCompose(text));\n  },\n\n  onSubmit (router) {\n    dispatch(submitCompose(router));\n  },\n\n  onClearSuggestions () {\n    dispatch(clearComposeSuggestions());\n  },\n\n  onFetchSuggestions (token) {\n    dispatch(fetchComposeSuggestions(token));\n  },\n\n  onSuggestionSelected (position, token, suggestion, path) {\n    dispatch(selectComposeSuggestion(position, token, suggestion, path));\n  },\n\n  onChangeSpoilerText (checked) {\n    dispatch(changeComposeSpoilerText(checked));\n  },\n\n  onPaste (files) {\n    dispatch(uploadCompose(files));\n  },\n\n  onPickEmoji (position, data, needsSpace) {\n    dispatch(insertEmojiCompose(position, data, needsSpace));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComposeForm);\n"],"sourceRoot":""}