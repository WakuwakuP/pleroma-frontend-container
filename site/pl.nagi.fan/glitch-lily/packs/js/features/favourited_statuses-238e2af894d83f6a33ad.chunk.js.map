{"version":3,"sources":["webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/favourited_statuses/index.js"],"names":["messages","defineMessages","heading","Favourites","connect","state","statusIds","getIn","isLoading","hasMore","injectIntl","ImmutablePureComponent","handlePin","columnId","dispatch","this","props","removeColumn","addColumn","handleMove","dir","moveColumn","handleHeaderClick","column","scrollTop","setRef","c","handleLoadMore","expandFavouritedStatuses","leading","componentWillMount","fetchFavouritedStatuses","render","intl","multiColumn","pinned","emptyMessage","id","defaultMessage","bindToDocument","ref","label","formatMessage","icon","title","onPin","onMove","onClick","showBackButton","trackScroll","scrollKey","onLoadMore","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","list","object","string","bool"],"mappings":"iSAaA,MAAMA,EAAWC,YAAe,CAC9BC,QAAQ,CAAD,sD,IAWHC,EAFUC,mBANQC,IAAK,CAC3BC,UAAWD,EAAME,MAAM,CAAC,eAAgB,aAAc,UACtDC,UAAWH,EAAME,MAAM,CAAC,eAAgB,aAAc,cAAc,GACpEE,UAAWJ,EAAME,MAAM,CAAC,eAAgB,aAAc,Y,GAIvDG,c,EADc,cAEUC,IAAwB,cAAD,yBAgB9CC,UAAY,KACV,MAAM,SAAEC,EAAF,SAAYC,GAAaC,KAAKC,MAGlCF,EADED,EACOI,YAAaJ,GAEbK,YAAU,aAAc,MAtBS,KA0B9CC,WAAcC,IACZ,MAAM,SAAEP,EAAF,SAAYC,GAAaC,KAAKC,MACpCF,EAASO,YAAWR,EAAUO,KA5Bc,KA+B9CE,kBAAoB,KAClBP,KAAKQ,OAAOC,aAhCgC,KAmC9CC,OAASC,IACPX,KAAKQ,OAASG,GApC8B,KAuC9CC,eAAiB,KAAS,KACxBZ,KAAKC,MAAMF,SAASc,iBACnB,IAAK,CAAEC,SAAS,IA7BnBC,qBACEf,KAAKC,MAAMF,SAASiB,eA8BtBC,SACE,MAAM,KAAEC,EAAF,UAAQ3B,EAAR,SAAmBO,EAAnB,YAA6BqB,EAA7B,QAA0CzB,EAA1C,UAAmDD,GAAcO,KAAKC,MACtEmB,IAAWtB,EAEXuB,EAAe,YAAC,IAAD,CAAkBC,GAAG,mCAAmCC,eAAe,0FAE5F,OACE,kBAAC,IAAD,CAAQC,gBAAiBL,EAAaM,IAAKzB,KAAKU,OAAQgB,MAAOR,EAAKS,cAAc1C,EAASE,UACzF,YAAC,IAAD,CACEyC,KAAK,OACLC,MAAOX,EAAKS,cAAc1C,EAASE,SACnC2C,MAAO9B,KAAKH,UACZkC,OAAQ/B,KAAKI,WACb4B,QAAShC,KAAKO,kBACda,OAAQA,EACRD,YAAaA,EACbc,gBAAc,IAGhB,YAAC,IAAD,CACEC,aAAcd,EACd7B,UAAWA,EACX4C,UAAS,uBAAyBrC,EAClCJ,QAASA,EACTD,UAAWA,EACX2C,WAAYpC,KAAKY,eACjBS,aAAcA,EACdG,gBAAiBL,QApElBkB,UAAY,CACjBtC,SAAUuC,IAAUC,KAAKC,WACzBjD,UAAWkD,IAAmBC,KAAKF,WACnCtB,KAAMoB,IAAUK,OAAOH,WACvB1C,SAAUwC,IAAUM,OACpBzB,YAAamB,IAAUO,KACvBnD,QAAS4C,IAAUO,KACnBpD,UAAW6C,IAAUO,M","file":"js/features/favourited_statuses-238e2af894d83f6a33ad.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchFavouritedStatuses, expandFavouritedStatuses } from '../../actions/favourites';\nimport Column from '../ui/components/column';\nimport ColumnHeader from '../../components/column_header';\nimport { addColumn, removeColumn, moveColumn } from '../../actions/columns';\nimport StatusList from '../../components/status_list';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { debounce } from 'lodash';\n\nconst messages = defineMessages({\n  heading: { id: 'column.favourites', defaultMessage: 'Favourites' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: state.getIn(['status_lists', 'favourites', 'items']),\n  isLoading: state.getIn(['status_lists', 'favourites', 'isLoading'], true),\n  hasMore: !!state.getIn(['status_lists', 'favourites', 'next']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Favourites extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    columnId: PropTypes.string,\n    multiColumn: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchFavouritedStatuses());\n  }\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('FAVOURITES', {}));\n    }\n  }\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  }\n\n  setRef = c => {\n    this.column = c;\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandFavouritedStatuses());\n  }, 300, { leading: true })\n\n  render () {\n    const { intl, statusIds, columnId, multiColumn, hasMore, isLoading } = this.props;\n    const pinned = !!columnId;\n\n    const emptyMessage = <FormattedMessage id='empty_column.favourited_statuses' defaultMessage=\"You don't have any favourite posts yet. When you favourite one, it will show up here.\" />;\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setRef} label={intl.formatMessage(messages.heading)}>\n        <ColumnHeader\n          icon='star'\n          title={intl.formatMessage(messages.heading)}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n          showBackButton\n        />\n\n        <StatusList\n          trackScroll={!pinned}\n          statusIds={statusIds}\n          scrollKey={`favourited_statuses-${columnId}`}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        />\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}