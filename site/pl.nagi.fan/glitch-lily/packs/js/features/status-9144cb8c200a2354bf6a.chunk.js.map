{"version":3,"sources":["webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/components/edited_timestamp/containers/dropdown_menu_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/components/edited_timestamp/index.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/status/components/detailed_status.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/status/components/action_bar.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/status/index.js"],"names":["connect","state","statusId","dropdownPlacement","getIn","openDropdownId","openedViaKeyboard","items","loading","dispatch","onOpen","id","onItemClick","keyboard","fetchHistory","openDropdownMenu","onClose","closeDropdownMenu","DropdownMenu","EditedTimestamp","index","openModal","injectIntl","React","PureComponent","handleItemClick","item","i","this","props","renderHeader","defaultMessage","values","count","size","renderItem","onClick","onKeyPress","formattedDate","timestamp","get","short","formattedName","accountId","label","name","date","className","data-index","render","intl","scrollable","formatDate","hour12","month","day","hour","minute","messages","defineMessages","public_short","unlisted_short","private_short","direct_short","DetailedStatus","ImmutablePureComponent","height","handleAccountClick","e","button","ctrlKey","metaKey","context","router","preventDefault","history","push","status","stopPropagation","handleOpenVideo","options","onOpenVideo","handleExpandedToggle","onToggleHidden","setRef","c","node","_measureHeight","handleModalLink","href","target","nodeName","parentNode","window","open","heightJustChanged","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","outerStyle","boxSizing","compact","pictureInPicture","media","applicationLink","reblogLink","reblogIcon","favouriteLink","edited","attachment","src","alt","duration","poster","backgroundColor","foregroundColor","accentColor","sensitive","visible","showMedia","blurhash","onToggleVisibility","onToggleMediaVisibility","preview","frameRate","width","inline","standalone","onOpenMedia","length","card","Fragment","rel","visibilityIcon","icon","text","formatMessage","visibilityLink","title","includes","Link","to","value","style","ref","classNames","account","localDomain","domain","expanded","onExpandedToggle","Date","year","contextTypes","PropTypes","object","propTypes","ImmutablePropTypes","map","func","isRequired","bool","string","contains","inUse","available","delete","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","bookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","copy","blockDomain","unblockDomain","unmute","unblock","ActionBar","relationship","handleReplyClick","onReply","handleReblogClick","onReblog","handleFavouriteClick","onFavourite","handleBookmarkClick","onBookmark","handleDeleteClick","onDelete","handleRedraftClick","handleEditClick","onEdit","handleDirectClick","onDirect","handleMentionClick","onMention","handleMuteClick","onMute","onUnmute","handleBlockClick","onBlock","onUnblock","handleBlockDomain","onBlockDomain","split","handleUnblockDomain","onUnblockDomain","handleConversationMuteClick","onMuteConversation","handleReport","onReport","handlePinClick","onPin","handleShare","navigator","url","handleEmbed","onEmbed","handleCopy","textarea","document","createElement","textContent","position","body","appendChild","select","execCommand","removeChild","publicStatus","pinnableStatus","mutingConversation","writtenByMe","me","menu","action","identity","permissions","PERMISSION_MANAGE_USERS","shareButton","replyIcon","reblogPrivate","reblogTitle","disabled","active","animate","direction","deleteConfirm","deleteMessage","redraftConfirm","redraftMessage","revealAll","hideAll","detailedStatus","replyConfirm","replyMessage","blockDomainConfirm","Status","getStatus","makeGetStatus","getPictureInPicture","makeGetPictureInPicture","getAncestorsIds","createSelector","_","inReplyTos","ancestorsIds","Immutable","List","withMutations","mutable","unshift","getDescendantsIds","contextReplies","statuses","descendantsIds","ids","pop","replies","reverse","forEach","insertAt","findIndex","idx","splice","params","askReplyConfirmation","trim","fullscreen","defaultMediaVisibility","loadedStatusId","undefined","handleToggleMediaVisibility","unfavourite","handlePin","message","confirm","onConfirm","replyCompose","handleModalReblog","privacy","unreblog","shiftKey","boostModal","initBoostModal","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","directCompose","mentionCompose","handleOpenMedia","handleHotkeyOpenMedia","startTime","initMuteModal","unmuteStatus","muteStatus","handleToggleHidden","revealStatus","hideStatus","handleToggleAll","statusIds","concat","toJS","initBlockModal","initReport","handleUnmuteClick","unmuteAccount","handleUnblockClick","unblockAccount","handleBlockDomainClick","handleUnblockDomainClick","handleHotkeyMoveUp","handleMoveUp","handleHotkeyMoveDown","handleMoveDown","handleHotkeyReply","handleHotkeyFavourite","handleHotkeyBoost","handleHotkeyMention","handleHotkeyOpenProfile","handleHotkeyToggleHidden","handleHotkeyToggleSensitive","_selectChild","indexOf","onFullScreenChange","isFullscreen","componentWillMount","fetchStatus","componentDidMount","attachFullscreenListener","componentWillReceiveProps","nextProps","_scrolledIntoView","align_top","container","element","querySelectorAll","scrollTop","offsetTop","scrollIntoView","clientHeight","offsetHeight","focus","renderChildren","list","onMoveUp","onMoveDown","contextType","requestAnimationFrame","componentWillUnmount","detachFullscreenListener","ancestors","descendants","multiColumn","handlers","moveUp","moveDown","boost","openProfile","toggleHidden","toggleSensitive","openMedia","bindToDocument","showBackButton","extraButton","aria-label","aria-pressed","scrollKey","tabIndex","textForScreenReader"],"mappings":"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","file":"js/features/status-9144cb8c200a2354bf6a.chunk.js","sourcesContent":["import { connect } from 'react-redux';\nimport { openDropdownMenu, closeDropdownMenu } from 'mastodon/actions/dropdown_menu';\nimport { fetchHistory } from 'mastodon/actions/history';\nimport DropdownMenu from 'mastodon/components/dropdown_menu';\n\nconst mapStateToProps = (state, { statusId }) => ({\n  dropdownPlacement: state.getIn(['dropdown_menu', 'placement']),\n  openDropdownId: state.getIn(['dropdown_menu', 'openId']),\n  openedViaKeyboard: state.getIn(['dropdown_menu', 'keyboard']),\n  items: state.getIn(['history', statusId, 'items']),\n  loading: state.getIn(['history', statusId, 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onOpen (id, onItemClick, dropdownPlacement, keyboard) {\n    dispatch(fetchHistory(statusId));\n    dispatch(openDropdownMenu(id, dropdownPlacement, keyboard));\n  },\n\n  onClose (id) {\n    dispatch(closeDropdownMenu(id));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Icon from 'mastodon/components/icon';\nimport DropdownMenu from './containers/dropdown_menu_container';\nimport { connect } from 'react-redux';\nimport { openModal } from 'mastodon/actions/modal';\nimport RelativeTimestamp from 'mastodon/components/relative_timestamp';\nimport InlineAccount from 'mastodon/components/inline_account';\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onItemClick (index) {\n    dispatch(openModal('COMPARE_HISTORY', { index, statusId }));\n  },\n\n});\n\nexport default @connect(null, mapDispatchToProps)\n@injectIntl\nclass EditedTimestamp extends React.PureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  handleItemClick = (item, i) => {\n    const { onItemClick } = this.props;\n    onItemClick(i);\n  };\n\n  renderHeader = items => {\n    return (\n      <FormattedMessage id='status.edited_x_times' defaultMessage='Edited {count, plural, one {{count} time} other {{count} times}}' values={{ count: items.size - 1 }} />\n    );\n  }\n\n  renderItem = (item, index, { onClick, onKeyPress }) => {\n    const formattedDate = <RelativeTimestamp timestamp={item.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={item.get('account')} />;\n\n    const label = item.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <li className='dropdown-menu__item edited-timestamp__history__item' key={item.get('created_at')}>\n        <button data-index={index} onClick={onClick} onKeyPress={onKeyPress}>{label}</button>\n      </li>\n    );\n  }\n\n  render () {\n    const { timestamp, intl, statusId } = this.props;\n\n    return (\n      <DropdownMenu statusId={statusId} renderItem={this.renderItem} scrollable renderHeader={this.renderHeader} onItemClick={this.handleItemClick}>\n        <button className='dropdown-menu__text-button'>\n          <FormattedMessage id='status.edited' defaultMessage='Edited {date}' values={{ date: intl.formatDate(timestamp, { hour12: false, month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }) }} /> <Icon id='caret-down' />\n        </button>\n      </DropdownMenu>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Avatar from '../../../components/avatar';\nimport DisplayName from '../../../components/display_name';\nimport StatusContent from '../../../components/status_content';\nimport MediaGallery from '../../../components/media_gallery';\nimport { Link } from 'react-router-dom';\nimport { injectIntl, defineMessages, FormattedDate } from 'react-intl';\nimport Card from './card';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Video from '../../video';\nimport Audio from '../../audio';\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\nimport AnimatedNumber from 'mastodon/components/animated_number';\nimport PictureInPicturePlaceholder from 'mastodon/components/picture_in_picture_placeholder';\nimport EditedTimestamp from 'mastodon/components/edited_timestamp';\n\nconst messages = defineMessages({\n  public_short: { id: 'privacy.public.short', defaultMessage: 'Public' },\n  unlisted_short: { id: 'privacy.unlisted.short', defaultMessage: 'Unlisted' },\n  private_short: { id: 'privacy.private.short', defaultMessage: 'Followers-only' },\n  direct_short: { id: 'privacy.direct.short', defaultMessage: 'Direct' },\n});\n\nexport default  @injectIntl\nclass DetailedStatus extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func.isRequired,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    onToggleMediaVisibility: PropTypes.func,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey) && this.context.router) {\n      e.preventDefault();\n      this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n\n    e.stopPropagation();\n  }\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  }\n\n  handleExpandedToggle = () => {\n    this.props.onToggleHidden(this.props.status);\n  }\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  }\n\n  render () {\n    const status = (this.props.status && this.props.status.get('reblog')) ? this.props.status.get('reblog') : this.props.status;\n    const outerStyle = { boxSizing: 'border-box' };\n    const { intl, compact, pictureInPicture } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let media           = '';\n    let applicationLink = '';\n    let reblogLink = '';\n    let reblogIcon = 'retweet';\n    let favouriteLink = '';\n    let edited = '';\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    if (pictureInPicture.get('inUse')) {\n      media = <PictureInPicturePlaceholder />;\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n\n        media = (\n          <Audio\n            src={attachment.get('url')}\n            alt={attachment.get('description')}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            blurhash={attachment.get('blurhash')}\n            height={150}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n\n        media = (\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={attachment.get('description')}\n            width={300}\n            height={150}\n            inline\n            onOpenVideo={this.handleOpenVideo}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else {\n        media = (\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            height={300}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      }\n    } else if (status.get('spoiler_text').length === 0) {\n      media = <Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card', null)} />;\n    }\n\n    if (status.get('application')) {\n      applicationLink = <React.Fragment> · <a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></React.Fragment>;\n    }\n\n    const visibilityIconInfo = {\n      'public': { icon: 'globe', text: intl.formatMessage(messages.public_short) },\n      'unlisted': { icon: 'unlock', text: intl.formatMessage(messages.unlisted_short) },\n      'private': { icon: 'lock', text: intl.formatMessage(messages.private_short) },\n      'direct': { icon: 'at', text: intl.formatMessage(messages.direct_short) },\n    };\n\n    const visibilityIcon = visibilityIconInfo[status.get('visibility')];\n    const visibilityLink = <React.Fragment> · <Icon id={visibilityIcon.icon} title={visibilityIcon.text} /></React.Fragment>;\n\n    if (['private', 'direct'].includes(status.get('visibility'))) {\n      reblogLink = '';\n    } else if (this.context.router) {\n      reblogLink = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/reblogs`} className='detailed-status__link'>\n            <Icon id={reblogIcon} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </Link>\n        </React.Fragment>\n      );\n    } else {\n      reblogLink = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n            <Icon id={reblogIcon} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </a>\n        </React.Fragment>\n      );\n    }\n\n    if (this.context.router) {\n      favouriteLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <Icon id='star' />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <Icon id='star' />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </a>\n      );\n    }\n\n    if (status.get('edited_at')) {\n      edited = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <EditedTimestamp statusId={status.get('id')} timestamp={status.get('edited_at')} />\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', `detailed-status-${status.get('visibility')}`, { compact })}>\n          <a href={status.getIn(['account', 'url'])} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={48} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent status={status} expanded={!status.get('hidden')} onExpandedToggle={this.handleExpandedToggle} />\n\n          {media}\n\n          <div className='detailed-status__meta'>\n            <a className='detailed-status__datetime' href={status.get('url')} target='_blank' rel='noopener noreferrer'>\n              <FormattedDate value={new Date(status.get('created_at'))} hour12={false} year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n            </a>{edited}{visibilityLink}{applicationLink}{reblogLink} · {favouriteLink}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport IconButton from '../../../components/icon_button';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport DropdownMenuContainer from '../../../containers/dropdown_menu_container';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { me } from '../../../initial_state';\nimport classNames from 'classnames';\nimport { PERMISSION_MANAGE_USERS } from 'mastodon/permissions';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Direct message @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favourite' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this status in the moderation interface' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to status' },\n  blockDomain: { id: 'account.block_domain', defaultMessage: 'Block domain {domain}' },\n  unblockDomain: { id: 'account.unblock_domain', defaultMessage: 'Unblock domain {domain}' },\n  unmute: { id: 'account.unmute', defaultMessage: 'Unmute @{name}' },\n  unblock: { id: 'account.unblock', defaultMessage: 'Unblock @{name}' },\n});\n\nconst mapStateToProps = (state, { status }) => ({\n  relationship: state.getIn(['relationships', status.getIn(['account', 'id'])]),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass ActionBar extends React.PureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    relationship: ImmutablePropTypes.map,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onUnmute: PropTypes.func,\n    onBlock: PropTypes.func,\n    onUnblock: PropTypes.func,\n    onBlockDomain: PropTypes.func,\n    onUnblockDomain: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  }\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  }\n\n  handleFavouriteClick = () => {\n    this.props.onFavourite(this.props.status);\n  }\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  }\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status, this.context.router.history);\n  }\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, this.context.router.history, true);\n  }\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status, this.context.router.history);\n  }\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'), this.context.router.history);\n  }\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'), this.context.router.history);\n  }\n\n  handleMuteClick = () => {\n    const { status, relationship, onMute, onUnmute } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('muting')) {\n      onUnmute(account);\n    } else {\n      onMute(account);\n    }\n  }\n\n  handleBlockClick = () => {\n    const { status, relationship, onBlock, onUnblock } = this.props;\n    const account = status.get('account');\n\n    if (relationship && relationship.get('blocking')) {\n      onUnblock(account);\n    } else {\n      onBlock(status);\n    }\n  }\n\n  handleBlockDomain = () => {\n    const { status, onBlockDomain } = this.props;\n    const account = status.get('account');\n\n    onBlockDomain(account.get('acct').split('@')[1]);\n  }\n\n  handleUnblockDomain = () => {\n    const { status, onUnblockDomain } = this.props;\n    const account = status.get('account');\n\n    onUnblockDomain(account.get('acct').split('@')[1]);\n  }\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  }\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  }\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  }\n\n  handleShare = () => {\n    navigator.share({\n      text: this.props.status.get('search_index'),\n      url: this.props.status.get('url'),\n    });\n  }\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  }\n\n  handleCopy = () => {\n    const url      = this.props.status.get('url');\n    const textarea = document.createElement('textarea');\n\n    textarea.textContent    = url;\n    textarea.style.position = 'fixed';\n\n    document.body.appendChild(textarea);\n\n    try {\n      textarea.select();\n      document.execCommand('copy');\n    } catch (e) {\n\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n\n  render () {\n    const { status, relationship, intl } = this.props;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const account            = status.get('account');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n\n    let menu = [];\n\n    if (publicStatus) {\n      menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n      menu.push(null);\n    }\n\n    if (writtenByMe) {\n      if (pinnableStatus) {\n        menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n        menu.push(null);\n      }\n\n      menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n      menu.push(null);\n      // menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n      menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick });\n      menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick });\n    } else {\n      menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n      menu.push(null);\n\n      if (relationship && relationship.get('muting')) {\n        menu.push({ text: intl.formatMessage(messages.unmute, { name: account.get('username') }), action: this.handleMuteClick });\n      } else {\n        menu.push({ text: intl.formatMessage(messages.mute, { name: account.get('username') }), action: this.handleMuteClick });\n      }\n\n      if (relationship && relationship.get('blocking')) {\n        menu.push({ text: intl.formatMessage(messages.unblock, { name: account.get('username') }), action: this.handleBlockClick });\n      } else {\n        menu.push({ text: intl.formatMessage(messages.block, { name: account.get('username') }), action: this.handleBlockClick });\n      }\n\n      menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport });\n\n      if (account.get('acct') !== account.get('username')) {\n        const domain = account.get('acct').split('@')[1];\n\n        menu.push(null);\n\n        if (relationship && relationship.get('domain_blocking')) {\n          menu.push({ text: intl.formatMessage(messages.unblockDomain, { domain }), action: this.handleUnblockDomain });\n        } else {\n          menu.push({ text: intl.formatMessage(messages.blockDomain, { domain }), action: this.handleBlockDomain });\n        }\n      }\n\n      if ((this.context.identity.permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) {\n        menu.push(null);\n        menu.push({ text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }), href: `/admin/accounts/${status.getIn(['account', 'id'])}` });\n        menu.push({ text: intl.formatMessage(messages.admin_status), href: `/admin/accounts/${status.getIn(['account', 'id'])}/statuses?id=${status.get('id')}` });\n      }\n    }\n\n    const shareButton = ('share' in navigator) && publicStatus && (\n      <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.share)} icon='share-alt' onClick={this.handleShare} /></div>\n    );\n\n    let replyIcon;\n    if (status.get('in_reply_to_id', null) === null) {\n      replyIcon = 'reply';\n    } else {\n      replyIcon = 'reply-all';\n    }\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle;\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n    }\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? 'reply' : replyIcon} onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button' ><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' onClick={this.handleFavouriteClick} /></div>\n        {shareButton}\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer size={18} icon='ellipsis-h' status={status} items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n","import Immutable from 'immutable';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { createSelector } from 'reselect';\nimport { fetchStatus } from '../../actions/statuses';\nimport MissingIndicator from '../../components/missing_indicator';\nimport DetailedStatus from './components/detailed_status';\nimport ActionBar from './components/action_bar';\nimport Column from '../ui/components/column';\nimport {\n  favourite,\n  unfavourite,\n  bookmark,\n  unbookmark,\n  reblog,\n  unreblog,\n  pin,\n  unpin,\n} from '../../actions/interactions';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from '../../actions/compose';\nimport {\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus,\n} from '../../actions/statuses';\nimport {\n  unblockAccount,\n  unmuteAccount,\n} from '../../actions/accounts';\nimport {\n  blockDomain,\n  unblockDomain,\n} from '../../actions/domain_blocks';\nimport { initMuteModal } from '../../actions/mutes';\nimport { initBlockModal } from '../../actions/blocks';\nimport { initBoostModal } from '../../actions/boosts';\nimport { initReport } from '../../actions/reports';\nimport { makeGetStatus, makeGetPictureInPicture } from '../../selectors';\nimport ScrollContainer from 'mastodon/containers/scroll_container';\nimport ColumnBackButton from '../../components/column_back_button';\nimport ColumnHeader from '../../components/column_header';\nimport StatusContainer from '../../containers/status_container';\nimport { openModal } from '../../actions/modal';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { HotKeys } from 'react-hotkeys';\nimport { boostModal, deleteModal } from '../../initial_state';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\nimport { textForScreenReader, defaultMediaVisibility } from '../../components/status';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  deleteConfirm: { id: 'confirmations.delete.confirm', defaultMessage: 'Delete' },\n  deleteMessage: { id: 'confirmations.delete.message', defaultMessage: 'Are you sure you want to delete this status?' },\n  redraftConfirm: { id: 'confirmations.redraft.confirm', defaultMessage: 'Delete & redraft' },\n  redraftMessage: { id: 'confirmations.redraft.message', defaultMessage: 'Are you sure you want to delete this status and re-draft it? Favourites and boosts will be lost, and replies to the original post will be orphaned.' },\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n  blockDomainConfirm: { id: 'confirmations.domain_block.confirm', defaultMessage: 'Hide entire domain' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n  const getPictureInPicture = makeGetPictureInPicture();\n\n  const getAncestorsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'inReplyTos']),\n  ], (statusId, inReplyTos) => {\n    let ancestorsIds = Immutable.List();\n    ancestorsIds = ancestorsIds.withMutations(mutable => {\n      let id = statusId;\n\n      while (id && !mutable.includes(id)) {\n        mutable.unshift(id);\n        id = inReplyTos.get(id);\n      }\n    });\n\n    return ancestorsIds;\n  });\n\n  const getDescendantsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'replies']),\n    state => state.get('statuses'),\n  ], (statusId, contextReplies, statuses) => {\n    let descendantsIds = [];\n    const ids = [statusId];\n\n    while (ids.length > 0) {\n      let id        = ids.pop();\n      const replies = contextReplies.get(id);\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.reverse().forEach(reply => {\n          if (!ids.includes(reply) && !descendantsIds.includes(reply) && statusId !== reply) ids.push(reply);\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => statuses.get(id).get('in_reply_to_account_id') !== statuses.get(id).get('account'));\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        if (idx > insertAt && statuses.get(id).get('in_reply_to_account_id') === statuses.get(id).get('account')) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return Immutable.List(descendantsIds);\n  });\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n\n    let ancestorsIds   = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds   = getAncestorsIds(state, { id: status.get('in_reply_to_id') });\n      descendantsIds = getDescendantsIds(state, { id: status.get('id') });\n    }\n\n    return {\n      status,\n      ancestorsIds,\n      descendantsIds,\n      askReplyConfirmation: state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      pictureInPicture: getPictureInPicture(state, { id: props.params.statusId }),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nexport default @injectIntl\n@connect(makeMapStateToProps)\nclass Status extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    ancestorsIds: ImmutablePropTypes.list,\n    descendantsIds: ImmutablePropTypes.list,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n  };\n\n  state = {\n    fullscreen: false,\n    showMedia: defaultMediaVisibility(this.props.status),\n    loadedStatusId: undefined,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n  }\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.params.statusId !== this.props.params.statusId && nextProps.params.statusId) {\n      this._scrolledIntoView = false;\n      this.props.dispatch(fetchStatus(nextProps.params.statusId));\n    }\n\n    if (nextProps.status && nextProps.status.get('id') !== this.state.loadedStatusId) {\n      this.setState({ showMedia: defaultMediaVisibility(nextProps.status), loadedStatusId: nextProps.status.get('id') });\n    }\n  }\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  }\n\n  handleFavouriteClick = (status) => {\n    if (status.get('favourited')) {\n      this.props.dispatch(unfavourite(status));\n    } else {\n      this.props.dispatch(favourite(status));\n    }\n  }\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  }\n\n  handleReplyClick = (status) => {\n    let { askReplyConfirmation, dispatch, intl } = this.props;\n    if (askReplyConfirmation) {\n      dispatch(openModal('CONFIRM', {\n        message: intl.formatMessage(messages.replyMessage),\n        confirm: intl.formatMessage(messages.replyConfirm),\n        onConfirm: () => dispatch(replyCompose(status, this.context.router.history)),\n      }));\n    } else {\n      dispatch(replyCompose(status, this.context.router.history));\n    }\n  }\n\n  handleModalReblog = (status, privacy) => {\n    this.props.dispatch(reblog(status, privacy));\n  }\n\n  handleReblogClick = (status, e) => {\n    if (status.get('reblogged')) {\n      this.props.dispatch(unreblog(status));\n    } else {\n      if ((e && e.shiftKey) || !boostModal) {\n        this.handleModalReblog(status);\n      } else {\n        this.props.dispatch(initBoostModal({ status, onReblog: this.handleModalReblog }));\n      }\n    }\n  }\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  }\n\n  handleDeleteClick = (status, history, withRedraft = false) => {\n    const { dispatch, intl } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), history, withRedraft));\n    } else {\n      dispatch(openModal('CONFIRM', {\n        message: intl.formatMessage(withRedraft ? messages.redraftMessage : messages.deleteMessage),\n        confirm: intl.formatMessage(withRedraft ? messages.redraftConfirm : messages.deleteConfirm),\n        onConfirm: () => dispatch(deleteStatus(status.get('id'), history, withRedraft)),\n      }));\n    }\n  }\n\n  handleEditClick = (status, history) => {\n    this.props.dispatch(editStatus(status.get('id'), history));\n  }\n\n  handleDirectClick = (account, router) => {\n    this.props.dispatch(directCompose(account, router));\n  }\n\n  handleMentionClick = (account, router) => {\n    this.props.dispatch(mentionCompose(account, router));\n  }\n\n  handleOpenMedia = (media, index) => {\n    this.props.dispatch(openModal('MEDIA', { statusId: this.props.status.get('id'), media, index }));\n  }\n\n  handleOpenVideo = (media, options) => {\n    this.props.dispatch(openModal('VIDEO', { statusId: this.props.status.get('id'), media, options }));\n  }\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  }\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  }\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  }\n\n  handleToggleHidden = (status) => {\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(status.get('id')));\n    } else {\n      this.props.dispatch(hideStatus(status.get('id')));\n    }\n  }\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds.toJS(), descendantsIds.toJS());\n\n    if (status.get('hidden')) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n  }\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  }\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  }\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal('EMBED', { url: status.get('url') }));\n  }\n\n  handleUnmuteClick = account => {\n    this.props.dispatch(unmuteAccount(account.get('id')));\n  }\n\n  handleUnblockClick = account => {\n    this.props.dispatch(unblockAccount(account.get('id')));\n  }\n\n  handleBlockDomainClick = domain => {\n    this.props.dispatch(openModal('CONFIRM', {\n      message: <FormattedMessage id='confirmations.domain_block.message' defaultMessage='Are you really, really sure you want to block the entire {domain}? In most cases a few targeted blocks or mutes are sufficient and preferable. You will not see content from that domain in any public timelines or your notifications. Your followers from that domain will be removed.' values={{ domain: <strong>{domain}</strong> }} />,\n      confirm: this.props.intl.formatMessage(messages.blockDomainConfirm),\n      onConfirm: () => this.props.dispatch(blockDomain(domain)),\n    }));\n  }\n\n  handleUnblockDomainClick = domain => {\n    this.props.dispatch(unblockDomain(domain));\n  }\n\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  }\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  }\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  }\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  }\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  }\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status.get('account'));\n  }\n\n  handleHotkeyOpenProfile = () => {\n    this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n  }\n\n  handleHotkeyToggleHidden = () => {\n    this.handleToggleHidden(this.props.status);\n  }\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  }\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  }\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  }\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  renderChildren (list) {\n    return list.map(id => (\n      <StatusContainer\n        key={id}\n        id={id}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n      />\n    ));\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  componentDidUpdate () {\n    if (this._scrolledIntoView) {\n      return;\n    }\n\n    const { status, ancestorsIds } = this.props;\n\n    if (status && ancestorsIds && ancestorsIds.size > 0) {\n      const element = this.node.querySelectorAll('.focusable')[ancestorsIds.size - 1];\n\n      window.requestAnimationFrame(() => {\n        element.scrollIntoView(true);\n      });\n      this._scrolledIntoView = true;\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  }\n\n  render () {\n    let ancestors, descendants;\n    const { status, ancestorsIds, descendantsIds, intl, domain, multiColumn, pictureInPicture } = this.props;\n    const { fullscreen } = this.state;\n\n    if (status === null) {\n      return (\n        <Column>\n          <ColumnBackButton multiColumn={multiColumn} />\n          <MissingIndicator />\n        </Column>\n      );\n    }\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <div>{this.renderChildren(ancestorsIds)}</div>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <div>{this.renderChildren(descendantsIds)}</div>;\n    }\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleHidden: this.handleHotkeyToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button className='column-header__button' title={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(status.get('hidden') ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll} aria-pressed={status.get('hidden') ? 'false' : 'true'}><Icon id={status.get('hidden') ? 'eye-slash' : 'eye'} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread'>\n          <div className={classNames('scrollable', { fullscreen })} ref={this.setRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className={classNames('focusable', 'detailed-status__wrapper')} tabIndex='0' aria-label={textForScreenReader(intl, status, false)}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  onToggleHidden={this.handleToggleHidden}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  pictureInPicture={pictureInPicture}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onUnmute={this.handleUnmuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onUnblock={this.handleUnblockClick}\n                  onBlockDomain={this.handleBlockDomainClick}\n                  onUnblockDomain={this.handleUnblockDomainClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}