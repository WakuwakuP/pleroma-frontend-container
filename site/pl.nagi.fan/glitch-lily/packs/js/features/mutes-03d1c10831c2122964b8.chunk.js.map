{"version":3,"sources":["webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/mutes/index.js"],"names":["messages","defineMessages","heading","Mutes","connect","state","accountIds","getIn","hasMore","isLoading","injectIntl","ImmutablePureComponent","handleLoadMore","this","props","dispatch","expandMutes","leading","componentWillMount","fetchMutes","render","intl","multiColumn","emptyMessage","id","defaultMessage","bindToDocument","icon","formatMessage","scrollKey","onLoadMore","map","defaultAction","propTypes","params","PropTypes","object","isRequired","func","bool","ImmutablePropTypes","list"],"mappings":"iSAcA,MAAMA,EAAWC,YAAe,CAC9BC,QAAQ,CAAD,kD,IAWHC,EAFUC,mBANQC,IAAK,CAC3BC,WAAYD,EAAME,MAAM,CAAC,aAAc,QAAS,UAChDC,UAAWH,EAAME,MAAM,CAAC,aAAc,QAAS,SAC/CE,UAAWJ,EAAME,MAAM,CAAC,aAAc,QAAS,cAAc,M,GAI9DG,c,EADc,cAEKC,IAAwB,cAAD,yBAgBzCC,eAAiB,KAAS,KACxBC,KAAKC,MAAMC,SAASC,iBACnB,IAAK,CAAEC,SAAS,IANnBC,qBACEL,KAAKC,MAAMC,SAASI,eAOtBC,SACE,MAAM,KAAEC,EAAF,QAAQb,EAAR,WAAiBF,EAAjB,YAA6BgB,EAA7B,UAA0Cb,GAAcI,KAAKC,MAEnE,IAAKR,EACH,OACE,YAAC,IAAD,UACE,YAAC,IAAD,KAKN,MAAMiB,EAAe,YAAC,IAAD,CAAkBC,GAAG,qBAAqBC,eAAe,qCAE9E,OACE,YAAC,IAAD,CAAQC,gBAAiBJ,EAAaK,KAAK,aAAazB,QAASmB,EAAKO,cAAc5B,EAASE,eAA7F,EACE,YAAC,IAAD,IACA,YAAC,IAAD,CACE2B,UAAU,QACVC,WAAYjB,KAAKD,eACjBJ,QAASA,EACTC,UAAWA,EACXc,aAAcA,EACdG,gBAAiBJ,QANnB,EAQGhB,EAAWyB,KAAIP,GACd,YAAC,IAAD,CAA2BA,GAAIA,EAAIQ,cAAc,QAA1BR,UA3C1BS,UAAY,CACjBC,OAAQC,IAAUC,OAAOC,WACzBtB,SAAUoB,IAAUG,KAAKD,WACzB7B,QAAS2B,IAAUI,KACnB9B,UAAW0B,IAAUI,KACrBjC,WAAYkC,IAAmBC,KAC/BpB,KAAMc,IAAUC,OAAOC,WACvBf,YAAaa,IAAUI,M","file":"js/features/mutes-03d1c10831c2122964b8.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport AccountContainer from '../../containers/account_container';\nimport { fetchMutes, expandMutes } from '../../actions/mutes';\nimport ScrollableList from '../../components/scrollable_list';\n\nconst messages = defineMessages({\n  heading: { id: 'column.mutes', defaultMessage: 'Muted users' },\n});\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['user_lists', 'mutes', 'items']),\n  hasMore: !!state.getIn(['user_lists', 'mutes', 'next']),\n  isLoading: state.getIn(['user_lists', 'mutes', 'isLoading'], true),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Mutes extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    accountIds: ImmutablePropTypes.list,\n    intl: PropTypes.object.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchMutes());\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandMutes());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, hasMore, accountIds, multiColumn, isLoading } = this.props;\n\n    if (!accountIds) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    const emptyMessage = <FormattedMessage id='empty_column.mutes' defaultMessage=\"You haven't muted any users yet.\" />;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='volume-off' heading={intl.formatMessage(messages.heading)}>\n        <ColumnBackButtonSlim />\n        <ScrollableList\n          scrollKey='mutes'\n          onLoadMore={this.handleLoadMore}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        >\n          {accountIds.map(id =>\n            <AccountContainer key={id} id={id} defaultAction='mute' />,\n          )}\n        </ScrollableList>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}