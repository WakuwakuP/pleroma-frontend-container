{"version":3,"sources":["webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/flavours/glitch/components/edited_timestamp/containers/dropdown_menu_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/flavours/glitch/components/edited_timestamp/index.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/flavours/glitch/features/status/components/detailed_status.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/flavours/glitch/features/status/components/action_bar.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/flavours/glitch/features/status/index.js"],"names":["connect","state","statusId","dropdownPlacement","getIn","openDropdownId","openedViaKeyboard","items","loading","dispatch","onOpen","id","onItemClick","keyboard","fetchHistory","openDropdownMenu","onClose","closeDropdownMenu","DropdownMenu","EditedTimestamp","index","openModal","injectIntl","React","PureComponent","handleItemClick","item","i","this","props","renderHeader","defaultMessage","values","count","size","renderItem","onClick","onKeyPress","formattedDate","timestamp","get","short","formattedName","accountId","label","name","date","className","data-index","render","intl","scrollable","formatDate","hour12","month","day","hour","minute","DetailedStatus","ImmutablePureComponent","height","handleAccountClick","e","button","ctrlKey","altKey","metaKey","context","router","preventDefault","history","location","mastodonBackSteps","push","status","stopPropagation","parseClick","destination","handleOpenVideo","options","onOpenVideo","setRef","c","node","_measureHeight","handleChildUpdate","handleModalLink","href","target","nodeName","parentNode","window","open","heightJustChanged","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","expanded","onToggleHidden","settings","usingPiP","outerStyle","boxSizing","compact","applicationLink","reblogLink","reblogIcon","favouriteLink","edited","contentMedia","contentMediaIcons","extraMedia","extraMediaIcons","media","mediaIcons","some","attachment","src","alt","duration","poster","backgroundColor","foregroundColor","accentColor","sensitive","visible","showMedia","blurhash","onToggleVisibility","onToggleMediaVisibility","preview","frameRate","inline","letterbox","fullwidth","preventPlayback","autoplay","standalone","hidden","onOpenMedia","card","pollId","Fragment","rel","visibilityLink","visibility","includes","Link","to","value","style","ref","classNames","data-status-by","account","localDomain","domain","collapsed","onExpandedToggle","onUpdate","tagLinks","rewriteMentions","disabled","Date","year","contextTypes","PropTypes","object","propTypes","ImmutablePropTypes","map","isRequired","func","bool","string","messages","defineMessages","delete","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","bookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","copy","ActionBar","handleReplyClick","onReply","handleReblogClick","onReblog","handleFavouriteClick","onFavourite","handleBookmarkClick","onBookmark","handleDeleteClick","onDelete","handleRedraftClick","handleEditClick","onEdit","handleDirectClick","onDirect","handleMentionClick","onMention","handleMuteClick","onMute","handleConversationMuteClick","onMuteConversation","handleBlockClick","onBlock","handleReport","onReport","handlePinClick","onPin","handleShare","navigator","text","url","handleEmbed","onEmbed","handleCopy","textarea","document","createElement","textContent","position","body","appendChild","select","execCommand","removeChild","publicStatus","pinnableStatus","mutingConversation","writtenByMe","me","menu","formatMessage","action","identity","permissions","PERMISSION_MANAGE_USERS","accountAdminLink","statusAdminLink","undefined","shareButton","title","icon","reblogPrivate","reblogTitle","active","animate","direction","deleteConfirm","deleteMessage","redraftConfirm","redraftMessage","revealAll","hideAll","detailedStatus","replyConfirm","replyMessage","tootHeading","Status","getStatus","makeGetStatus","getAncestorsIds","createSelector","_","inReplyTos","ancestorsIds","Immutable","List","withMutations","mutable","unshift","getDescendantsIds","contextReplies","statuses","descendantsIds","ids","length","pop","replies","reverse","forEach","insertAt","findIndex","idx","splice","params","askReplyConfirmation","trim","fullscreen","isExpanded","threadExpanded","loadedStatusId","revealBehindCW","handleToggleHidden","revealStatus","hideStatus","setExpansion","handleToggleMediaVisibility","handleModalFavourite","unfavourite","shiftKey","favouriteModal","handlePin","message","confirm","onDoNotAsk","changeLocalSetting","onConfirm","replyCompose","handleModalReblog","privacy","unreblog","initBoostModal","missingMediaDescription","boostModal","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","directCompose","mentionCompose","handleOpenMedia","handleHotkeyOpenMedia","startTime","initMuteModal","unmuteStatus","muteStatus","handleToggleAll","statusIds","concat","toJS","initBlockModal","initReport","handleHotkeyToggleSensitive","handleHotkeyMoveUp","handleMoveUp","handleHotkeyMoveDown","handleMoveDown","handleHotkeyReply","handleHotkeyFavourite","handleHotkeyBoost","handleHotkeyBookmark","handleHotkeyMention","handleHotkeyOpenProfile","_selectChild","indexOf","handleHeaderClick","column","scrollTop","setColumnRef","onFullScreenChange","isFullscreen","componentDidMount","attachFullscreenListener","fetchStatus","element","querySelectorAll","requestAnimationFrame","scrollIntoView","update","updated","defaultMediaVisibility","autoUnfoldCW","align_top","container","offsetTop","clientHeight","offsetHeight","focus","renderChildren","list","onMoveUp","onMoveDown","contextType","componentWillUnmount","detachFullscreenListener","ancestors","descendants","multiColumn","handlers","moveUp","moveDown","boost","openProfile","toggleSpoiler","toggleSensitive","openMedia","bindToDocument","showBackButton","extraButton","aria-label","aria-pressed","scrollKey","tabIndex","textForScreenReader"],"mappings":"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","file":"js/flavours/glitch/async/status-936d777ba246b28b5c45.chunk.js","sourcesContent":["import { connect } from 'react-redux';\nimport { openDropdownMenu, closeDropdownMenu } from 'flavours/glitch/actions/dropdown_menu';\nimport { fetchHistory } from 'flavours/glitch/actions/history';\nimport DropdownMenu from 'flavours/glitch/components/dropdown_menu';\n\nconst mapStateToProps = (state, { statusId }) => ({\n  dropdownPlacement: state.getIn(['dropdown_menu', 'placement']),\n  openDropdownId: state.getIn(['dropdown_menu', 'openId']),\n  openedViaKeyboard: state.getIn(['dropdown_menu', 'keyboard']),\n  items: state.getIn(['history', statusId, 'items']),\n  loading: state.getIn(['history', statusId, 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onOpen (id, onItemClick, dropdownPlacement, keyboard) {\n    dispatch(fetchHistory(statusId));\n    dispatch(openDropdownMenu(id, dropdownPlacement, keyboard));\n  },\n\n  onClose (id) {\n    dispatch(closeDropdownMenu(id));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Icon from 'flavours/glitch/components/icon';\nimport DropdownMenu from './containers/dropdown_menu_container';\nimport { connect } from 'react-redux';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport RelativeTimestamp from 'flavours/glitch/components/relative_timestamp';\nimport InlineAccount from 'flavours/glitch/components/inline_account';\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onItemClick (index) {\n    dispatch(openModal('COMPARE_HISTORY', { index, statusId }));\n  },\n\n});\n\nexport default @connect(null, mapDispatchToProps)\n@injectIntl\nclass EditedTimestamp extends React.PureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  handleItemClick = (item, i) => {\n    const { onItemClick } = this.props;\n    onItemClick(i);\n  };\n\n  renderHeader = items => {\n    return (\n      <FormattedMessage id='status.edited_x_times' defaultMessage='Edited {count, plural, one {{count} time} other {{count} times}}' values={{ count: items.size - 1 }} />\n    );\n  }\n\n  renderItem = (item, index, { onClick, onKeyPress }) => {\n    const formattedDate = <RelativeTimestamp timestamp={item.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={item.get('account')} />;\n\n    const label = item.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <li className='dropdown-menu__item edited-timestamp__history__item' key={item.get('created_at')}>\n        <button data-index={index} onClick={onClick} onKeyPress={onKeyPress}>{label}</button>\n      </li>\n    );\n  }\n\n  render () {\n    const { timestamp, intl, statusId } = this.props;\n\n    return (\n      <DropdownMenu statusId={statusId} renderItem={this.renderItem} scrollable renderHeader={this.renderHeader} onItemClick={this.handleItemClick}>\n        <button className='dropdown-menu__text-button'>\n          <FormattedMessage id='status.edited' defaultMessage='Edited {date}' values={{ date: intl.formatDate(timestamp, { hour12: false, month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }) }} /> <Icon id='caret-down' />\n        </button>\n      </DropdownMenu>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Avatar from 'flavours/glitch/components/avatar';\nimport DisplayName from 'flavours/glitch/components/display_name';\nimport StatusContent from 'flavours/glitch/components/status_content';\nimport MediaGallery from 'flavours/glitch/components/media_gallery';\nimport AttachmentList from 'flavours/glitch/components/attachment_list';\nimport { Link } from 'react-router-dom';\nimport { injectIntl, FormattedDate } from 'react-intl';\nimport Card from './card';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Video from 'flavours/glitch/features/video';\nimport Audio from 'flavours/glitch/features/audio';\nimport VisibilityIcon from 'flavours/glitch/components/status_visibility_icon';\nimport scheduleIdleTask from 'flavours/glitch/util/schedule_idle_task';\nimport classNames from 'classnames';\nimport PollContainer from 'flavours/glitch/containers/poll_container';\nimport Icon from 'flavours/glitch/components/icon';\nimport AnimatedNumber from 'flavours/glitch/components/animated_number';\nimport PictureInPicturePlaceholder from 'flavours/glitch/components/picture_in_picture_placeholder';\nimport EditedTimestamp from 'flavours/glitch/components/edited_timestamp';\n\nexport default @injectIntl\nclass DetailedStatus extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    settings: ImmutablePropTypes.map.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func,\n    expanded: PropTypes.bool,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    usingPiP: PropTypes.bool,\n    onToggleMediaVisibility: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.altKey || e.metaKey) && this.context.router) {\n      e.preventDefault();\n      let state = {...this.context.router.history.location.state};\n      state.mastodonBackSteps = (state.mastodonBackSteps || 0) + 1;\n      this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`, state);\n    }\n\n    e.stopPropagation();\n  }\n\n  parseClick = (e, destination) => {\n    if (e.button === 0 && !(e.ctrlKey || e.altKey || e.metaKey) && this.context.router) {\n      e.preventDefault();\n      let state = {...this.context.router.history.location.state};\n      state.mastodonBackSteps = (state.mastodonBackSteps || 0) + 1;\n      this.context.router.history.push(destination, state);\n    }\n\n    e.stopPropagation();\n  }\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  }\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleChildUpdate = () => {\n    this._measureHeight();\n  }\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  }\n\n  render () {\n    const status = (this.props.status && this.props.status.get('reblog')) ? this.props.status.get('reblog') : this.props.status;\n    const { expanded, onToggleHidden, settings, usingPiP, intl } = this.props;\n    const outerStyle = { boxSizing: 'border-box' };\n    const { compact } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let applicationLink = '';\n    let reblogLink = '';\n    let reblogIcon = 'retweet';\n    let favouriteLink = '';\n    let edited = '';\n\n    //  Depending on user settings, some media are considered as parts of the\n    //  contents (affected by CW) while other will be displayed outside of the\n    //  CW.\n    let contentMedia = [];\n    let contentMediaIcons = [];\n    let extraMedia = [];\n    let extraMediaIcons = [];\n    let media = contentMedia;\n    let mediaIcons = contentMediaIcons;\n\n    if (settings.getIn(['content_warnings', 'media_outside'])) {\n      media = extraMedia;\n      mediaIcons = extraMediaIcons;\n    }\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    if (usingPiP) {\n      media.push(<PictureInPicturePlaceholder />);\n      mediaIcons.push('video-camera');\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.get('media_attachments').some(item => item.get('type') === 'unknown')) {\n        media.push(<AttachmentList media={status.get('media_attachments')} />);\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n\n        media.push(\n          <Audio\n            src={attachment.get('url')}\n            alt={attachment.get('description')}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            blurhash={attachment.get('blurhash')}\n            height={150}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('music');\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        media.push(\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={attachment.get('description')}\n            inline\n            sensitive={status.get('sensitive')}\n            letterbox={settings.getIn(['media', 'letterbox'])}\n            fullwidth={settings.getIn(['media', 'fullwidth'])}\n            preventPlayback={!expanded}\n            onOpenVideo={this.handleOpenVideo}\n            autoplay\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('video-camera');\n      } else {\n        media.push(\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            letterbox={settings.getIn(['media', 'letterbox'])}\n            fullwidth={settings.getIn(['media', 'fullwidth'])}\n            hidden={!expanded}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('picture-o');\n      }\n    } else if (status.get('card')) {\n      media.push(<Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card')} />);\n      mediaIcons.push('link');\n    }\n\n    if (status.get('poll')) {\n      contentMedia.push(<PollContainer pollId={status.get('poll')} />);\n      contentMediaIcons.push('tasks');\n    }\n\n    if (status.get('application')) {\n      applicationLink = <React.Fragment> · <a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></React.Fragment>;\n    }\n\n    const visibilityLink = <React.Fragment> · <VisibilityIcon visibility={status.get('visibility')} /></React.Fragment>;\n\n    if (status.get('visibility') === 'direct') {\n      reblogIcon = 'envelope';\n    } else if (status.get('visibility') === 'private') {\n      reblogIcon = 'lock';\n    }\n\n    if (!['unlisted', 'public'].includes(status.get('visibility'))) {\n      reblogLink = null;\n    } else if (this.context.router) {\n      reblogLink = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/reblogs`} className='detailed-status__link'>\n            <Icon id={reblogIcon} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </Link>\n        </React.Fragment>\n      );\n    } else {\n      reblogLink = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n            <Icon id={reblogIcon} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </a>\n        </React.Fragment>\n      );\n    }\n\n    if (this.context.router) {\n      favouriteLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <Icon id='star' />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <Icon id='star' />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </a>\n      );\n    }\n\n    if (status.get('edited_at')) {\n      edited = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <EditedTimestamp statusId={status.get('id')} timestamp={status.get('edited_at')} />\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', `detailed-status-${status.get('visibility')}`, { compact })} data-status-by={status.getIn(['account', 'acct'])}>\n          <a href={status.getIn(['account', 'url'])} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={48} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent\n            status={status}\n            media={contentMedia}\n            extraMedia={extraMedia}\n            mediaIcons={contentMediaIcons}\n            expanded={expanded}\n            collapsed={false}\n            onExpandedToggle={onToggleHidden}\n            parseClick={this.parseClick}\n            onUpdate={this.handleChildUpdate}\n            tagLinks={settings.get('tag_misleading_links')}\n            rewriteMentions={settings.get('rewrite_mentions')}\n            disabled\n          />\n\n          <div className='detailed-status__meta'>\n            <a className='detailed-status__datetime' href={status.get('url')} target='_blank' rel='noopener noreferrer'>\n              <FormattedDate value={new Date(status.get('created_at'))} hour12={false} year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n            </a>{edited}{visibilityLink}{applicationLink}{reblogLink} · {favouriteLink}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from 'flavours/glitch/components/icon_button';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport DropdownMenuContainer from 'flavours/glitch/containers/dropdown_menu_container';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { me } from 'flavours/glitch/util/initial_state';\nimport { accountAdminLink, statusAdminLink } from 'flavours/glitch/util/backend_links';\nimport classNames from 'classnames';\nimport { PERMISSION_MANAGE_USERS } from 'flavours/glitch/permissions';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Direct message @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favourite' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this status in the moderation interface' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to status' },\n});\n\nexport default @injectIntl\nclass ActionBar extends React.PureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onBlock: PropTypes.func,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  }\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  }\n\n  handleFavouriteClick = (e) => {\n    this.props.onFavourite(this.props.status, e);\n  }\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  }\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status, this.context.router.history);\n  }\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, this.context.router.history, true);\n  }\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status, this.context.router.history);\n  }\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'), this.context.router.history);\n  }\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'), this.context.router.history);\n  }\n\n  handleMuteClick = () => {\n    this.props.onMute(this.props.status.get('account'));\n  }\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  }\n\n  handleBlockClick = () => {\n    this.props.onBlock(this.props.status);\n  }\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  }\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  }\n\n  handleShare = () => {\n    navigator.share({\n      text: this.props.status.get('search_index'),\n      url: this.props.status.get('url'),\n    });\n  }\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  }\n\n  handleCopy = () => {\n    const url      = this.props.status.get('url');\n    const textarea = document.createElement('textarea');\n\n    textarea.textContent    = url;\n    textarea.style.position = 'fixed';\n\n    document.body.appendChild(textarea);\n\n    try {\n      textarea.select();\n      document.execCommand('copy');\n    } catch (e) {\n\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n\n  render () {\n    const { status, intl } = this.props;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n\n    let menu = [];\n\n    if (publicStatus) {\n      menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n      menu.push(null);\n    }\n\n    if (writtenByMe) {\n      if (pinnableStatus) {\n        menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n        menu.push(null);\n      }\n\n      menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n      menu.push(null);\n      // menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n      menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick });\n      menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick });\n    } else {\n      menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n      menu.push({ text: intl.formatMessage(messages.direct, { name: status.getIn(['account', 'username']) }), action: this.handleDirectClick });\n      menu.push(null);\n      menu.push({ text: intl.formatMessage(messages.mute, { name: status.getIn(['account', 'username']) }), action: this.handleMuteClick });\n      menu.push({ text: intl.formatMessage(messages.block, { name: status.getIn(['account', 'username']) }), action: this.handleBlockClick });\n      menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport });\n      if ((this.context.identity.permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS && (accountAdminLink || statusAdminLink)) {\n        menu.push(null);\n        if (accountAdminLink !== undefined) {\n          menu.push({\n            text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }),\n            href: accountAdminLink(status.getIn(['account', 'id'])),\n          });\n        }\n        if (statusAdminLink !== undefined) {\n          menu.push({\n            text: intl.formatMessage(messages.admin_status),\n            href: statusAdminLink(status.getIn(['account', 'id']), status.get('id')),\n          });\n        }\n      }\n    }\n\n    const shareButton = ('share' in navigator) && publicStatus && (\n      <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.share)} icon='share-alt' onClick={this.handleShare} /></div>\n    );\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle;\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n    }\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_id', null) === null ? 'reply' : 'reply-all'} onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' onClick={this.handleFavouriteClick} /></div>\n        {shareButton}\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer size={18} icon='ellipsis-h' items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n","import Immutable from 'immutable';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { createSelector } from 'reselect';\nimport { fetchStatus } from 'flavours/glitch/actions/statuses';\nimport MissingIndicator from 'flavours/glitch/components/missing_indicator';\nimport DetailedStatus from './components/detailed_status';\nimport ActionBar from './components/action_bar';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport {\n  favourite,\n  unfavourite,\n  bookmark,\n  unbookmark,\n  reblog,\n  unreblog,\n  pin,\n  unpin,\n} from 'flavours/glitch/actions/interactions';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from 'flavours/glitch/actions/compose';\nimport { changeLocalSetting } from 'flavours/glitch/actions/local_settings';\nimport {\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus\n} from 'flavours/glitch/actions/statuses';\nimport { initMuteModal } from 'flavours/glitch/actions/mutes';\nimport { initBlockModal } from 'flavours/glitch/actions/blocks';\nimport { initReport } from 'flavours/glitch/actions/reports';\nimport { initBoostModal } from 'flavours/glitch/actions/boosts';\nimport { makeGetStatus } from 'flavours/glitch/selectors';\nimport ScrollContainer from 'flavours/glitch/containers/scroll_container';\nimport ColumnBackButton from 'flavours/glitch/components/column_back_button';\nimport ColumnHeader from '../../components/column_header';\nimport StatusContainer from 'flavours/glitch/containers/status_container';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { HotKeys } from 'react-hotkeys';\nimport { boostModal, favouriteModal, deleteModal } from 'flavours/glitch/util/initial_state';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from 'flavours/glitch/util/fullscreen';\nimport { autoUnfoldCW } from 'flavours/glitch/util/content_warning';\nimport { textForScreenReader, defaultMediaVisibility } from 'flavours/glitch/components/status';\nimport Icon from 'flavours/glitch/components/icon';\n\nconst messages = defineMessages({\n  deleteConfirm: { id: 'confirmations.delete.confirm', defaultMessage: 'Delete' },\n  deleteMessage: { id: 'confirmations.delete.message', defaultMessage: 'Are you sure you want to delete this status?' },\n  redraftConfirm: { id: 'confirmations.redraft.confirm', defaultMessage: 'Delete & redraft' },\n  redraftMessage: { id: 'confirmations.redraft.message', defaultMessage: 'Are you sure you want to delete this status and re-draft it? You will lose all replies, boosts and favourites to it.' },\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n  tootHeading: { id: 'column.toot', defaultMessage: 'Toots and replies' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n\n  const getAncestorsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'inReplyTos']),\n  ], (statusId, inReplyTos) => {\n    let ancestorsIds = Immutable.List();\n    ancestorsIds = ancestorsIds.withMutations(mutable => {\n      let id = statusId;\n\n      while (id && !mutable.includes(id)) {\n        mutable.unshift(id);\n        id = inReplyTos.get(id);\n      }\n    });\n\n    return ancestorsIds;\n  });\n\n  const getDescendantsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'replies']),\n    state => state.get('statuses'),\n  ], (statusId, contextReplies, statuses) => {\n    let descendantsIds = [];\n    const ids = [statusId];\n\n    while (ids.length > 0) {\n      let id        = ids.pop();\n      const replies = contextReplies.get(id);\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.reverse().forEach(reply => {\n          if (!ids.includes(reply) && !descendantsIds.includes(reply) && statusId !== reply) ids.push(reply);\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => statuses.get(id).get('in_reply_to_account_id') !== statuses.get(id).get('account'));\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        if (idx > insertAt && statuses.get(id).get('in_reply_to_account_id') === statuses.get(id).get('account')) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return Immutable.List(descendantsIds);\n  });\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n    let ancestorsIds = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds = getAncestorsIds(state, { id: status.get('in_reply_to_id') });\n      descendantsIds = getDescendantsIds(state, { id: status.get('id') });\n    }\n\n    return {\n      status,\n      ancestorsIds,\n      descendantsIds,\n      settings: state.get('local_settings'),\n      askReplyConfirmation: state.getIn(['local_settings', 'confirm_before_clearing_draft']) && state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      usingPiP: state.get('picture_in_picture').statusId === props.params.statusId,\n    };\n  };\n\n  return mapStateToProps;\n};\n\nexport default @injectIntl\n@connect(makeMapStateToProps)\nclass Status extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    settings: ImmutablePropTypes.map.isRequired,\n    ancestorsIds: ImmutablePropTypes.list,\n    descendantsIds: ImmutablePropTypes.list,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    usingPiP: PropTypes.bool,\n  };\n\n  state = {\n    fullscreen: false,\n    isExpanded: undefined,\n    threadExpanded: undefined,\n    statusId: undefined,\n    loadedStatusId: undefined,\n    showMedia: undefined,\n    revealBehindCW: undefined,\n  };\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n\n    const { status, ancestorsIds } = this.props;\n\n    if (status && ancestorsIds && ancestorsIds.size > 0) {\n      const element = this.node.querySelectorAll('.focusable')[ancestorsIds.size - 1];\n\n      window.requestAnimationFrame(() => {\n        element.scrollIntoView(true);\n      });\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let update = {};\n    let updated = false;\n\n    if (props.params.statusId && state.statusId !== props.params.statusId) {\n      props.dispatch(fetchStatus(props.params.statusId));\n      update.threadExpanded = undefined;\n      update.statusId = props.params.statusId;\n      updated = true;\n    }\n\n    const revealBehindCW = props.settings.getIn(['media', 'reveal_behind_cw']);\n    if (revealBehindCW !== state.revealBehindCW) {\n      update.revealBehindCW = revealBehindCW;\n      if (revealBehindCW) update.showMedia = defaultMediaVisibility(props.status, props.settings);\n      updated = true;\n    }\n\n    if (props.status && state.loadedStatusId !== props.status.get('id')) {\n      update.showMedia = defaultMediaVisibility(props.status, props.settings);\n      update.loadedStatusId = props.status.get('id');\n      update.isExpanded = autoUnfoldCW(props.settings, props.status);\n      updated = true;\n    }\n\n    return updated ? update : null;\n  }\n\n  handleToggleHidden = () => {\n    const { status } = this.props;\n\n    if (this.props.settings.getIn(['content_warnings', 'shared_state'])) {\n      if (status.get('hidden')) {\n        this.props.dispatch(revealStatus(status.get('id')));\n      } else {\n        this.props.dispatch(hideStatus(status.get('id')));\n      }\n    } else if (this.props.status.get('spoiler_text')) {\n      this.setExpansion(!this.state.isExpanded);\n    }\n  }\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  }\n\n  handleModalFavourite = (status) => {\n    this.props.dispatch(favourite(status));\n  }\n\n  handleFavouriteClick = (status, e) => {\n    if (status.get('favourited')) {\n      this.props.dispatch(unfavourite(status));\n    } else {\n      if ((e && e.shiftKey) || !favouriteModal) {\n        this.handleModalFavourite(status);\n      } else {\n        this.props.dispatch(openModal('FAVOURITE', { status, onFavourite: this.handleModalFavourite }));\n      }\n    }\n  }\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  }\n\n  handleReplyClick = (status) => {\n    let { askReplyConfirmation, dispatch, intl } = this.props;\n    if (askReplyConfirmation) {\n      dispatch(openModal('CONFIRM', {\n        message: intl.formatMessage(messages.replyMessage),\n        confirm: intl.formatMessage(messages.replyConfirm),\n        onDoNotAsk: () => dispatch(changeLocalSetting(['confirm_before_clearing_draft'], false)),\n        onConfirm: () => dispatch(replyCompose(status, this.context.router.history)),\n      }));\n    } else {\n      dispatch(replyCompose(status, this.context.router.history));\n    }\n  }\n\n  handleModalReblog = (status, privacy) => {\n    const { dispatch } = this.props;\n\n    if (status.get('reblogged')) {\n      dispatch(unreblog(status));\n    } else {\n      dispatch(reblog(status, privacy));\n    }\n  }\n\n  handleReblogClick = (status, e) => {\n    const { settings, dispatch } = this.props;\n\n    if (settings.get('confirm_boost_missing_media_description') && status.get('media_attachments').some(item => !item.get('description')) && !status.get('reblogged')) {\n      dispatch(initBoostModal({ status, onReblog: this.handleModalReblog, missingMediaDescription: true }));\n    } else if ((e && e.shiftKey) || !boostModal) {\n      this.handleModalReblog(status);\n    } else {\n      dispatch(initBoostModal({ status, onReblog: this.handleModalReblog }));\n    }\n  }\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  }\n\n  handleDeleteClick = (status, history, withRedraft = false) => {\n    const { dispatch, intl } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), history, withRedraft));\n    } else {\n      dispatch(openModal('CONFIRM', {\n        message: intl.formatMessage(withRedraft ? messages.redraftMessage : messages.deleteMessage),\n        confirm: intl.formatMessage(withRedraft ? messages.redraftConfirm : messages.deleteConfirm),\n        onConfirm: () => dispatch(deleteStatus(status.get('id'), history, withRedraft)),\n      }));\n    }\n  }\n\n  handleEditClick = (status, history) => {\n    this.props.dispatch(editStatus(status.get('id'), history));\n  }\n\n  handleDirectClick = (account, router) => {\n    this.props.dispatch(directCompose(account, router));\n  }\n\n  handleMentionClick = (account, router) => {\n    this.props.dispatch(mentionCompose(account, router));\n  }\n\n  handleOpenMedia = (media, index) => {\n    this.props.dispatch(openModal('MEDIA', { statusId: this.props.status.get('id'), media, index }));\n  }\n\n  handleOpenVideo = (media, options) => {\n    this.props.dispatch(openModal('VIDEO', { statusId: this.props.status.get('id'), media, options }));\n  }\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  }\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  }\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  }\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds, settings } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds.toJS(), descendantsIds.toJS());\n    let { isExpanded } = this.state;\n\n    if (settings.getIn(['content_warnings', 'shared_state']))\n      isExpanded = !status.get('hidden');\n\n    if (!isExpanded) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n\n    this.setState({ isExpanded: !isExpanded, threadExpanded: !isExpanded });\n  }\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  }\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  }\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal('EMBED', { url: status.get('url') }));\n  }\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  }\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  }\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  }\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  }\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  }\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  }\n\n  handleHotkeyBookmark = () => {\n    this.handleBookmarkClick(this.props.status);\n  }\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status);\n  }\n\n  handleHotkeyOpenProfile = () => {\n    let state = {...this.context.router.history.location.state};\n    state.mastodonBackSteps = (state.mastodonBackSteps || 0) + 1;\n    this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`, state);\n  }\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  }\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  }\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  }\n\n  renderChildren (list) {\n    return list.map(id => (\n      <StatusContainer\n        key={id}\n        id={id}\n        expanded={this.state.threadExpanded}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n      />\n    ));\n  }\n\n  setExpansion = value => {\n    this.setState({ isExpanded: value });\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  setColumnRef = c => {\n    this.column = c;\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.params.statusId && (this.props.params.statusId !== prevProps.params.statusId || prevProps.ancestorsIds.size < this.props.ancestorsIds.size)) {\n      const { status, ancestorsIds } = this.props;\n\n      if (status && ancestorsIds && ancestorsIds.size > 0) {\n        const element = this.node.querySelectorAll('.focusable')[ancestorsIds.size - 1];\n\n        window.requestAnimationFrame(() => {\n          element.scrollIntoView(true);\n        });\n      }\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  }\n\n  render () {\n    let ancestors, descendants;\n    const { status, settings, ancestorsIds, descendantsIds, intl, domain, multiColumn, usingPiP } = this.props;\n    const { fullscreen } = this.state;\n\n    if (status === null) {\n      return (\n        <Column>\n          <ColumnBackButton multiColumn={multiColumn} />\n          <MissingIndicator />\n        </Column>\n      );\n    }\n\n    const isExpanded = settings.getIn(['content_warnings', 'shared_state']) ? !status.get('hidden') : this.state.isExpanded;\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <div>{this.renderChildren(ancestorsIds)}</div>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <div>{this.renderChildren(descendantsIds)}</div>;\n    }\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      bookmark: this.handleHotkeyBookmark,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleSpoiler: this.handleToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setColumnRef} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          icon='comment'\n          title={intl.formatMessage(messages.tootHeading)}\n          onClick={this.handleHeaderClick}\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button className='column-header__button' title={intl.formatMessage(!isExpanded ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(!isExpanded ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll} aria-pressed={!isExpanded ? 'false' : 'true'}><Icon id={!isExpanded ? 'eye-slash' : 'eye'} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread'>\n          <div className={classNames('scrollable', 'detailed-status__wrapper', { fullscreen })} ref={this.setRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className='focusable' tabIndex='0' aria-label={textForScreenReader(intl, status, false, isExpanded)}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  settings={settings}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  expanded={isExpanded}\n                  onToggleHidden={this.handleToggleHidden}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  usingPiP={usingPiP}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}