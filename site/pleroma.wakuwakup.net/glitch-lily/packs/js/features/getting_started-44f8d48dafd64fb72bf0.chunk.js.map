{"version":3,"sources":["webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/getting_started/index.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/getting_started/components/trends.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/getting_started/containers/trends_container.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/ui/components/link_footer.js"],"names":["messages","defineMessages","home_timeline","notifications","public_timeline","settings_subheading","community_timeline","explore","direct","bookmarks","preferences","follow_requests","favourites","blocks","domain_blocks","mutes","pins","lists","discover","personal","security","menu","GettingStarted","connect","state","myAccount","getIn","me","columns","unreadFollowRequests","ImmutableList","size","dispatch","fetchFollowRequests","injectIntl","ImmutablePureComponent","componentDidMount","multiColumn","this","props","window","innerWidth","context","router","history","replace","render","intl","navItems","height","number","limit","push","text","formatMessage","icon","to","find","item","get","badge","href","bindToDocument","label","className","id","fixedWidth","defaultMessage","style","withHotkeys","showTrends","contextTypes","PropTypes","object","isRequired","propTypes","ImmutablePropTypes","map","list","bool","func","unreadNotifications","Trends","fetchTrends","refreshInterval","setInterval","componentWillUnmount","clearInterval","trends","isEmpty","take","hashtag","defaultProps","loading","fetchTrendingHashtags","logoutMessage","logoutConfirm","LinkFooter","onLogout","openModal","message","confirm","closeWhenConfirm","onConfirm","logOut","React","PureComponent","handleLogoutClick","e","preventDefault","stopPropagation","identity","permissions","PERMISSION_INVITE_USERS","target","limitedFederationMode","profileDirectory","onClick","values","github","source_url","rel","repository","version"],"mappings":"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","file":"js/features/getting_started-44f8d48dafd64fb72bf0.chunk.js","sourcesContent":["import React from 'react';\nimport Column from '../ui/components/column';\nimport ColumnLink from '../ui/components/column_link';\nimport ColumnSubheading from '../ui/components/column_subheading';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { me, showTrends } from '../../initial_state';\nimport { fetchFollowRequests } from 'mastodon/actions/accounts';\nimport { List as ImmutableList } from 'immutable';\nimport NavigationContainer from '../compose/containers/navigation_container';\nimport Icon from 'mastodon/components/icon';\nimport LinkFooter from 'mastodon/features/ui/components/link_footer';\nimport TrendsContainer from './containers/trends_container';\n\nconst messages = defineMessages({\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public_timeline: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  settings_subheading: { id: 'column_subheading.settings', defaultMessage: 'Settings' },\n  community_timeline: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  explore: { id: 'navigation_bar.explore', defaultMessage: 'Explore' },\n  direct: { id: 'navigation_bar.direct', defaultMessage: 'Direct messages' },\n  bookmarks: { id: 'navigation_bar.bookmarks', defaultMessage: 'Bookmarks' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  follow_requests: { id: 'navigation_bar.follow_requests', defaultMessage: 'Follow requests' },\n  favourites: { id: 'navigation_bar.favourites', defaultMessage: 'Favourites' },\n  blocks: { id: 'navigation_bar.blocks', defaultMessage: 'Blocked users' },\n  domain_blocks: { id: 'navigation_bar.domain_blocks', defaultMessage: 'Hidden domains' },\n  mutes: { id: 'navigation_bar.mutes', defaultMessage: 'Muted users' },\n  pins: { id: 'navigation_bar.pins', defaultMessage: 'Pinned posts' },\n  lists: { id: 'navigation_bar.lists', defaultMessage: 'Lists' },\n  discover: { id: 'navigation_bar.discover', defaultMessage: 'Discover' },\n  personal: { id: 'navigation_bar.personal', defaultMessage: 'Personal' },\n  security: { id: 'navigation_bar.security', defaultMessage: 'Security' },\n  menu: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n});\n\nconst mapStateToProps = state => ({\n  myAccount: state.getIn(['accounts', me]),\n  columns: state.getIn(['settings', 'columns']),\n  unreadFollowRequests: state.getIn(['user_lists', 'follow_requests', 'items'], ImmutableList()).size,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFollowRequests: () => dispatch(fetchFollowRequests()),\n});\n\nconst badgeDisplay = (number, limit) => {\n  if (number === 0) {\n    return undefined;\n  } else if (limit && number >= limit) {\n    return `${limit}+`;\n  } else {\n    return number;\n  }\n};\n\nconst NAVIGATION_PANEL_BREAKPOINT = 600 + (285 * 2) + (10 * 2);\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass GettingStarted extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    myAccount: ImmutablePropTypes.map.isRequired,\n    columns: ImmutablePropTypes.list,\n    multiColumn: PropTypes.bool,\n    fetchFollowRequests: PropTypes.func.isRequired,\n    unreadFollowRequests: PropTypes.number,\n    unreadNotifications: PropTypes.number,\n  };\n\n  componentDidMount () {\n    const { fetchFollowRequests, multiColumn } = this.props;\n\n    if (!multiColumn && window.innerWidth >= NAVIGATION_PANEL_BREAKPOINT) {\n      this.context.router.history.replace('/home');\n      return;\n    }\n\n    fetchFollowRequests();\n  }\n\n  render () {\n    const { intl, myAccount, columns, multiColumn, unreadFollowRequests } = this.props;\n\n    const navItems = [];\n    let height = (multiColumn) ? 0 : 60;\n\n    if (multiColumn) {\n      navItems.push(\n        <ColumnSubheading key='header-discover' text={intl.formatMessage(messages.discover)} />,\n      );\n      height += 34;\n    }\n\n    navItems.push(\n      <ColumnLink key='explore' icon='hashtag' text={intl.formatMessage(messages.explore)} to='/explore' />,\n    );\n    height += 48;\n\n    if (multiColumn) {\n      navItems.push(\n        <ColumnLink key='community_timeline' icon='users' text={intl.formatMessage(messages.community_timeline)} to='/public/local' />,\n        <ColumnLink key='public_timeline' icon='globe' text={intl.formatMessage(messages.public_timeline)} to='/public' />,\n      );\n\n      height += 48*2;\n\n      navItems.push(\n        <ColumnSubheading key='header-personal' text={intl.formatMessage(messages.personal)} />,\n      );\n\n      height += 34;\n    }\n\n    if (multiColumn && !columns.find(item => item.get('id') === 'HOME')) {\n      navItems.push(\n        <ColumnLink key='home' icon='home' text={intl.formatMessage(messages.home_timeline)} to='/home' />,\n      );\n      height += 48;\n    }\n\n    navItems.push(\n      <ColumnLink key='direct' icon='at' text={intl.formatMessage(messages.direct)} to='/conversations' />,\n      <ColumnLink key='bookmark' icon='bookmark' text={intl.formatMessage(messages.bookmarks)} to='/bookmarks' />,\n      <ColumnLink key='favourites' icon='star' text={intl.formatMessage(messages.favourites)} to='/favourites' />,\n      <ColumnLink key='lists' icon='list-ul' text={intl.formatMessage(messages.lists)} to='/lists' />,\n    );\n\n    height += 48*4;\n\n    if (myAccount.get('locked') || unreadFollowRequests > 0) {\n      navItems.push(<ColumnLink key='follow_requests' icon='user-plus' text={intl.formatMessage(messages.follow_requests)} badge={badgeDisplay(unreadFollowRequests, 40)} to='/follow_requests' />);\n      height += 48;\n    }\n\n    if (!multiColumn) {\n      navItems.push(\n        <ColumnSubheading key='header-settings' text={intl.formatMessage(messages.settings_subheading)} />,\n        <ColumnLink key='preferences' icon='gears' text={intl.formatMessage(messages.preferences)} href='/settings/preferences' />,\n      );\n\n      height += 34 + 48;\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn} label={intl.formatMessage(messages.menu)}>\n        {multiColumn && <div className='column-header__wrapper'>\n          <h1 className='column-header'>\n            <button>\n              <Icon id='bars' className='column-header__icon' fixedWidth />\n              <FormattedMessage id='getting_started.heading' defaultMessage='Getting started' />\n            </button>\n          </h1>\n        </div>}\n\n        <div className='getting-started'>\n          <div className='getting-started__wrapper' style={{ height }}>\n            {!multiColumn && <NavigationContainer />}\n            {navItems}\n          </div>\n\n          {!multiColumn && <div className='flex-spacer' />}\n\n          <LinkFooter withHotkeys={multiColumn} />\n        </div>\n\n        {multiColumn && showTrends && <TrendsContainer />}\n      </Column>\n    );\n  }\n\n}\n","import React from 'react';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { ImmutableHashtag as Hashtag } from 'mastodon/components/hashtag';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class Trends extends ImmutablePureComponent {\n\n  static defaultProps = {\n    loading: false,\n  };\n\n  static propTypes = {\n    trends: ImmutablePropTypes.list,\n    fetchTrends: PropTypes.func.isRequired,\n  };\n\n  componentDidMount () {\n    this.props.fetchTrends();\n    this.refreshInterval = setInterval(() => this.props.fetchTrends(), 900 * 1000);\n  }\n\n  componentWillUnmount () {\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n    }\n  }\n\n  render () {\n    const { trends } = this.props;\n\n    if (!trends || trends.isEmpty()) {\n      return null;\n    }\n\n    return (\n      <div className='getting-started__trends'>\n        <h4><FormattedMessage id='trends.trending_now' defaultMessage='Trending now' /></h4>\n\n        {trends.take(3).map(hashtag => <Hashtag key={hashtag.get('name')} hashtag={hashtag} />)}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport { fetchTrendingHashtags } from 'mastodon/actions/trends';\nimport Trends from '../components/trends';\n\nconst mapStateToProps = state => ({\n  trends: state.getIn(['trends', 'tags', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchTrends: () => dispatch(fetchTrendingHashtags()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Trends);\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { limitedFederationMode, version, repository, source_url, profile_directory as profileDirectory } from 'mastodon/initial_state';\nimport { logOut } from 'mastodon/utils/log_out';\nimport { openModal } from 'mastodon/actions/modal';\nimport { PERMISSION_INVITE_USERS } from 'mastodon/permissions';\n\nconst messages = defineMessages({\n  logoutMessage: { id: 'confirmations.logout.message', defaultMessage: 'Are you sure you want to log out?' },\n  logoutConfirm: { id: 'confirmations.logout.confirm', defaultMessage: 'Log out' },\n});\n\nconst mapDispatchToProps = (dispatch, { intl }) => ({\n  onLogout () {\n    dispatch(openModal('CONFIRM', {\n      message: intl.formatMessage(messages.logoutMessage),\n      confirm: intl.formatMessage(messages.logoutConfirm),\n      closeWhenConfirm: false,\n      onConfirm: () => logOut(),\n    }));\n  },\n});\n\nexport default @injectIntl\n@connect(null, mapDispatchToProps)\nclass LinkFooter extends React.PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    withHotkeys: PropTypes.bool,\n    onLogout: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleLogoutClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.props.onLogout();\n\n    return false;\n  }\n\n  render () {\n    const { withHotkeys } = this.props;\n\n    return (\n      <div className='getting-started__footer'>\n        <ul>\n          {((this.context.identity.permissions & PERMISSION_INVITE_USERS) === PERMISSION_INVITE_USERS) && <li><a href='/invites' target='_blank'><FormattedMessage id='getting_started.invite' defaultMessage='Invite people' /></a> · </li>}\n          {withHotkeys && <li><Link to='/keyboard-shortcuts'><FormattedMessage id='navigation_bar.keyboard_shortcuts' defaultMessage='Hotkeys' /></Link> · </li>}\n          <li><a href='/auth/edit'><FormattedMessage id='getting_started.security' defaultMessage='Security' /></a> · </li>\n          {!limitedFederationMode && <li><a href='/about/more' target='_blank'><FormattedMessage id='navigation_bar.info' defaultMessage='About this server' /></a> · </li>}\n          {profileDirectory && <li><Link to='/directory'><FormattedMessage id='getting_started.directory' defaultMessage='Profile directory' /></Link> · </li>}\n          <li><a href='https://joinmastodon.org/apps' target='_blank'><FormattedMessage id='navigation_bar.apps' defaultMessage='Mobile apps' /></a> · </li>\n          <li><a href='/terms' target='_blank'><FormattedMessage id='getting_started.terms' defaultMessage='Terms of service' /></a> · </li>\n          <li><a href='/settings/applications' target='_blank'><FormattedMessage id='getting_started.developers' defaultMessage='Developers' /></a> · </li>\n          <li><a href='https://docs.joinmastodon.org' target='_blank'><FormattedMessage id='getting_started.documentation' defaultMessage='Documentation' /></a> · </li>\n          <li><a href='/auth/sign_out' onClick={this.handleLogoutClick}><FormattedMessage id='navigation_bar.logout' defaultMessage='Logout' /></a></li>\n        </ul>\n\n        <p>\n          <FormattedMessage\n            id='getting_started.open_source_notice'\n            defaultMessage='Mastodon is open source software. You can contribute or report issues on GitHub at {github}.'\n            values={{ github: <span><a href={source_url} rel='noopener noreferrer' target='_blank'>{repository}</a> (v{version})</span> }}\n          />\n        </p>\n      </div>\n    );\n  }\n\n};\n"],"sourceRoot":""}