{"version":3,"sources":["webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/account_gallery/components/media_item.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/features/account_gallery/index.js"],"names":["MediaItem","ImmutablePureComponent","state","visible","displayMedia","this","props","attachment","getIn","loaded","handleImageLoad","setState","handleMouseEnter","e","hoverToPlay","target","play","handleMouseLeave","pause","currentTime","handleClick","button","ctrlKey","metaKey","preventDefault","onOpenMedia","autoPlayGif","indexOf","get","render","displayWidth","width","Math","floor","height","status","title","thumbnail","label","icon","content","includes","src","alt","onLoad","id","x","y","style","objectPosition","className","aria-label","role","onMouseEnter","onMouseLeave","autoPlay","isIOS","loop","muted","href","onClick","rel","hash","classNames","dummy","useBlurhash","propTypes","ImmutablePropTypes","map","isRequired","PropTypes","number","func","LoadMoreMedia","handleLoadMore","onLoadMore","maxId","disabled","string","AccountGallery","connect","params","acct","accountId","isAccount","attachments","getAccountGallery","isLoading","hasMore","suspended","blockedBy","handleScrollToBottom","size","last","undefined","handleScroll","scrollTop","scrollHeight","clientHeight","dispatch","expandAccountMediaTimeline","handleLoadOlder","handleOpenMedia","statusId","openModal","media","options","index","findIndex","handleRef","c","offsetWidth","_load","fetchAccount","componentDidMount","lookupAccount","componentDidUpdate","prevProps","multiColumn","emptyMessage","loadOlder","defaultMessage","scrollKey","onScroll","ref","shape","list","bool"],"mappings":"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","file":"js/features/account_gallery-24c866e4c419891e0e75.chunk.js","sourcesContent":["import Blurhash from 'mastodon/components/blurhash';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\nimport { autoPlayGif, displayMedia, useBlurhash } from 'mastodon/initial_state';\nimport { isIOS } from 'mastodon/is_mobile';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nexport default class MediaItem extends ImmutablePureComponent {\n\n  static propTypes = {\n    attachment: ImmutablePropTypes.map.isRequired,\n    displayWidth: PropTypes.number.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n  };\n\n  state = {\n    visible: displayMedia !== 'hide_all' && !this.props.attachment.getIn(['status', 'sensitive']) || displayMedia === 'show_all',\n    loaded: false,\n  };\n\n  handleImageLoad = () => {\n    this.setState({ loaded: true });\n  }\n\n  handleMouseEnter = e => {\n    if (this.hoverToPlay()) {\n      e.target.play();\n    }\n  }\n\n  handleMouseLeave = e => {\n    if (this.hoverToPlay()) {\n      e.target.pause();\n      e.target.currentTime = 0;\n    }\n  }\n\n  hoverToPlay () {\n    return !autoPlayGif && ['gifv', 'video'].indexOf(this.props.attachment.get('type')) !== -1;\n  }\n\n  handleClick = e => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n\n      if (this.state.visible) {\n        this.props.onOpenMedia(this.props.attachment);\n      } else {\n        this.setState({ visible: true });\n      }\n    }\n  }\n\n  render () {\n    const { attachment, displayWidth } = this.props;\n    const { visible, loaded } = this.state;\n\n    const width  = `${Math.floor((displayWidth - 4) / 3) - 4}px`;\n    const height = width;\n    const status = attachment.get('status');\n    const title  = status.get('spoiler_text') || attachment.get('description');\n\n    let thumbnail, label, icon, content;\n\n    if (!visible) {\n      icon = (\n        <span className='account-gallery__item__icons'>\n          <Icon id='eye-slash' />\n        </span>\n      );\n    } else {\n      if (['audio', 'video'].includes(attachment.get('type'))) {\n        content = (\n          <img\n            src={attachment.get('preview_url') || attachment.getIn(['account', 'avatar_static'])}\n            alt={attachment.get('description')}\n            onLoad={this.handleImageLoad}\n          />\n        );\n\n        if (attachment.get('type') === 'audio') {\n          label = <Icon id='music' />;\n        } else {\n          label = <Icon id='play' />;\n        }\n      } else if (attachment.get('type') === 'image') {\n        const focusX = attachment.getIn(['meta', 'focus', 'x']) || 0;\n        const focusY = attachment.getIn(['meta', 'focus', 'y']) || 0;\n        const x      = ((focusX /  2) + .5) * 100;\n        const y      = ((focusY / -2) + .5) * 100;\n\n        content = (\n          <img\n            src={attachment.get('preview_url')}\n            alt={attachment.get('description')}\n            style={{ objectPosition: `${x}% ${y}%` }}\n            onLoad={this.handleImageLoad}\n          />\n        );\n      } else if (attachment.get('type') === 'gifv') {\n        content = (\n          <video\n            className='media-gallery__item-gifv-thumbnail'\n            aria-label={attachment.get('description')}\n            role='application'\n            src={attachment.get('url')}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            autoPlay={!isIOS() && autoPlayGif}\n            loop\n            muted\n          />\n        );\n\n        label = 'GIF';\n      }\n\n      thumbnail = (\n        <div className='media-gallery__gifv'>\n          {content}\n\n          {label && <span className='media-gallery__gifv__label'>{label}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <div className='account-gallery__item' style={{ width, height }}>\n        <a className='media-gallery__item-thumbnail' href={status.get('url')} onClick={this.handleClick} title={title} target='_blank' rel='noopener noreferrer'>\n          <Blurhash\n            hash={attachment.get('blurhash')}\n            className={classNames('media-gallery__preview', { 'media-gallery__preview--hidden': visible && loaded })}\n            dummy={!useBlurhash}\n          />\n\n          {visible ? thumbnail : icon}\n        </a>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { lookupAccount, fetchAccount } from 'mastodon/actions/accounts';\nimport { expandAccountMediaTimeline } from '../../actions/timelines';\nimport LoadingIndicator from 'mastodon/components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ColumnBackButton from 'mastodon/components/column_back_button';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { getAccountGallery } from 'mastodon/selectors';\nimport MediaItem from './components/media_item';\nimport HeaderContainer from '../account_timeline/containers/header_container';\nimport ScrollContainer from 'mastodon/containers/scroll_container';\nimport LoadMore from 'mastodon/components/load_more';\nimport MissingIndicator from 'mastodon/components/missing_indicator';\nimport { openModal } from 'mastodon/actions/modal';\nimport { FormattedMessage } from 'react-intl';\n\nconst mapStateToProps = (state, { params: { acct, id } }) => {\n  const accountId = id || state.getIn(['accounts_map', acct]);\n\n  if (!accountId) {\n    return {\n      isLoading: true,\n    };\n  }\n\n  return {\n    accountId,\n    isAccount: !!state.getIn(['accounts', accountId]),\n    attachments: getAccountGallery(state, accountId),\n    isLoading: state.getIn(['timelines', `account:${accountId}:media`, 'isLoading']),\n    hasMore: state.getIn(['timelines', `account:${accountId}:media`, 'hasMore']),\n    suspended: state.getIn(['accounts', accountId, 'suspended'], false),\n    blockedBy: state.getIn(['relationships', accountId, 'blocked_by'], false),\n  };\n};\n\nclass LoadMoreMedia extends ImmutablePureComponent {\n\n  static propTypes = {\n    maxId: PropTypes.string,\n    onLoadMore: PropTypes.func.isRequired,\n  };\n\n  handleLoadMore = () => {\n    this.props.onLoadMore(this.props.maxId);\n  }\n\n  render () {\n    return (\n      <LoadMore\n        disabled={this.props.disabled}\n        onClick={this.handleLoadMore}\n      />\n    );\n  }\n\n}\n\nexport default @connect(mapStateToProps)\nclass AccountGallery extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.shape({\n      acct: PropTypes.string,\n      id: PropTypes.string,\n    }).isRequired,\n    accountId: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n    attachments: ImmutablePropTypes.list.isRequired,\n    isLoading: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isAccount: PropTypes.bool,\n    blockedBy: PropTypes.bool,\n    suspended: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n  };\n\n  state = {\n    width: 323,\n  };\n\n  _load () {\n    const { accountId, isAccount, dispatch } = this.props;\n\n    if (!isAccount) dispatch(fetchAccount(accountId));\n    dispatch(expandAccountMediaTimeline(accountId));\n  }\n\n  componentDidMount () {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (accountId) {\n      this._load();\n    } else {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (prevProps.accountId !== accountId && accountId) {\n      this._load();\n    } else if (prevProps.params.acct !== acct) {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  handleScrollToBottom = () => {\n    if (this.props.hasMore) {\n      this.handleLoadMore(this.props.attachments.size > 0 ? this.props.attachments.last().getIn(['status', 'id']) : undefined);\n    }\n  }\n\n  handleScroll = e => {\n    const { scrollTop, scrollHeight, clientHeight } = e.target;\n    const offset = scrollHeight - scrollTop - clientHeight;\n\n    if (150 > offset && !this.props.isLoading) {\n      this.handleScrollToBottom();\n    }\n  }\n\n  handleLoadMore = maxId => {\n    this.props.dispatch(expandAccountMediaTimeline(this.props.accountId, { maxId }));\n  };\n\n  handleLoadOlder = e => {\n    e.preventDefault();\n    this.handleScrollToBottom();\n  }\n\n  handleOpenMedia = attachment => {\n    const { dispatch } = this.props;\n    const statusId = attachment.getIn(['status', 'id']);\n\n    if (attachment.get('type') === 'video') {\n      dispatch(openModal('VIDEO', { media: attachment, statusId, options: { autoPlay: true } }));\n    } else if (attachment.get('type') === 'audio') {\n      dispatch(openModal('AUDIO', { media: attachment, statusId, options: { autoPlay: true } }));\n    } else {\n      const media = attachment.getIn(['status', 'media_attachments']);\n      const index = media.findIndex(x => x.get('id') === attachment.get('id'));\n\n      dispatch(openModal('MEDIA', { media, index, statusId }));\n    }\n  }\n\n  handleRef = c => {\n    if (c) {\n      this.setState({ width: c.offsetWidth });\n    }\n  }\n\n  render () {\n    const { attachments, isLoading, hasMore, isAccount, multiColumn, blockedBy, suspended } = this.props;\n    const { width } = this.state;\n\n    if (!isAccount) {\n      return (\n        <Column>\n          <MissingIndicator />\n        </Column>\n      );\n    }\n\n    if (!attachments && isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    let loadOlder = null;\n\n    if (hasMore && !(isLoading && attachments.size === 0)) {\n      loadOlder = <LoadMore visible={!isLoading} onClick={this.handleLoadOlder} />;\n    }\n\n    let emptyMessage;\n\n    if (suspended) {\n      emptyMessage = <FormattedMessage id='empty_column.account_suspended' defaultMessage='Account suspended' />;\n    } else if (blockedBy) {\n      emptyMessage = <FormattedMessage id='empty_column.account_unavailable' defaultMessage='Profile unavailable' />;\n    }\n\n    return (\n      <Column>\n        <ColumnBackButton multiColumn={multiColumn} />\n\n        <ScrollContainer scrollKey='account_gallery'>\n          <div className='scrollable scrollable--flex' onScroll={this.handleScroll}>\n            <HeaderContainer accountId={this.props.accountId} />\n\n            {(suspended || blockedBy) ? (\n              <div className='empty-column-indicator'>\n                {emptyMessage}\n              </div>\n            ) : (\n              <div role='feed' className='account-gallery__container' ref={this.handleRef}>\n                {attachments.map((attachment, index) => attachment === null ? (\n                  <LoadMoreMedia key={'more:' + attachments.getIn(index + 1, 'id')} maxId={index > 0 ? attachments.getIn(index - 1, 'id') : null} onLoadMore={this.handleLoadMore} />\n                ) : (\n                  <MediaItem key={attachment.get('id')} attachment={attachment} displayWidth={width} onOpenMedia={this.handleOpenMedia} />\n                ))}\n\n                {loadOlder}\n              </div>\n            )}\n\n            {isLoading && attachments.size === 0 && (\n              <div className='scrollable__append'>\n                <LoadingIndicator />\n              </div>\n            )}\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}