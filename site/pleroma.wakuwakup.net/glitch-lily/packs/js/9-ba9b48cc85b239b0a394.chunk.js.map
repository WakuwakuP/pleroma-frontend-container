{"version":3,"sources":["webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/mastodon/components/admin/ReportReasonSelector.js"],"names":["messages","defineMessages","other","spam","violation","Category","React","PureComponent","handleClick","id","disabled","onSelect","this","props","render","text","selected","children","tabIndex","role","className","classNames","onClick","type","name","value","active","Rule","onToggle","checkbox","ReportReasonSelector","injectIntl","state","category","rule_ids","rules","_save","api","put","catch","err","console","error","handleSelect","setState","handleToggle","includes","filter","x","componentDidMount","get","then","res","data","intl","formatMessage","map","rule"],"mappings":"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","file":"js/9-ba9b48cc85b239b0a394.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport api from 'mastodon/api';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport classNames from 'classnames';\n\nconst messages = defineMessages({\n  other: { id: 'report.categories.other', defaultMessage: 'Other' },\n  spam: { id: 'report.categories.spam', defaultMessage: 'Spam' },\n  violation: { id: 'report.categories.violation', defaultMessage: 'Content violates one or more server rules' },\n});\n\nclass Category extends React.PureComponent {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    selected: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onSelect: PropTypes.func,\n    children: PropTypes.node,\n  };\n\n  handleClick = () => {\n    const { id, disabled, onSelect } = this.props;\n\n    if (!disabled) {\n      onSelect(id);\n    }\n  };\n\n  render () {\n    const { id, text, disabled, selected, children } = this.props;\n\n    return (\n      <div tabIndex='0' role='button' className={classNames('report-reason-selector__category', { selected, disabled })} onClick={this.handleClick}>\n        {selected && <input type='hidden' name='report[category]' value={id} />}\n\n        <div className='report-reason-selector__category__label'>\n          <span className={classNames('poll__input', { active: selected, disabled })} />\n          {text}\n        </div>\n\n        {(selected && children) && (\n          <div className='report-reason-selector__category__rules'>\n            {children}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n}\n\nclass Rule extends React.PureComponent {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    selected: PropTypes.bool,\n    disabled: PropTypes.bool,\n    onToggle: PropTypes.func,\n  };\n\n  handleClick = () => {\n    const { id, disabled, onToggle } = this.props;\n\n    if (!disabled) {\n      onToggle(id);\n    }\n  };\n\n  render () {\n    const { id, text, disabled, selected } = this.props;\n\n    return (\n      <div tabIndex='0' role='button' className={classNames('report-reason-selector__rule', { selected, disabled })} onClick={this.handleClick}>\n        <span className={classNames('poll__input', { checkbox: true, active: selected, disabled })} />\n        {selected && <input type='hidden' name='report[rule_ids][]' value={id} />}\n        {text}\n      </div>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass ReportReasonSelector extends React.PureComponent {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    rule_ids: PropTypes.arrayOf(PropTypes.string),\n    disabled: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    category: this.props.category,\n    rule_ids: this.props.rule_ids || [],\n    rules: [],\n  };\n\n  componentDidMount() {\n    api().get('/api/v1/instance').then(res => {\n      this.setState({\n        rules: res.data.rules,\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  _save = () => {\n    const { id, disabled } = this.props;\n    const { category, rule_ids } = this.state;\n\n    if (disabled) {\n      return;\n    }\n\n    api().put(`/api/v1/admin/reports/${id}`, {\n      category,\n      rule_ids,\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  handleSelect = id => {\n    this.setState({ category: id }, () => this._save());\n  };\n\n  handleToggle = id => {\n    const { rule_ids } = this.state;\n\n    if (rule_ids.includes(id)) {\n      this.setState({ rule_ids: rule_ids.filter(x => x !== id ) }, () => this._save());\n    } else {\n      this.setState({ rule_ids: [...rule_ids, id] }, () => this._save());\n    }\n  };\n\n  render () {\n    const { disabled, intl } = this.props;\n    const { rules, category, rule_ids } = this.state;\n\n    return (\n      <div className='report-reason-selector'>\n        <Category id='other' text={intl.formatMessage(messages.other)} selected={category === 'other'} onSelect={this.handleSelect} disabled={disabled} />\n        <Category id='spam' text={intl.formatMessage(messages.spam)} selected={category === 'spam'} onSelect={this.handleSelect} disabled={disabled} />\n        <Category id='violation' text={intl.formatMessage(messages.violation)} selected={category === 'violation'} onSelect={this.handleSelect} disabled={disabled}>\n          {rules.map(rule => <Rule key={rule.id} id={rule.id} text={rule.text} selected={rule_ids.includes(rule.id)} onToggle={this.handleToggle} disabled={disabled} />)}\n        </Category>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}