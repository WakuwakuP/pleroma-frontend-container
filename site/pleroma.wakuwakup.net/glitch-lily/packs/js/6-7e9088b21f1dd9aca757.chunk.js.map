{"version":3,"sources":["webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/flavours/glitch/components/admin/Trends.js"],"names":["Trends","React","PureComponent","state","loading","data","componentDidMount","limit","this","props","api","get","params","then","res","setState","catch","err","console","error","render","content","Array","from","map","_","i","hashtag","name","href","id","people","history","accounts","uses","reverse","day","className","classNames","requires_review","trendable","defaultMessage"],"mappings":"6MAOe,MAAMA,UAAeC,IAAMC,cAAe,cAAD,yBAMtDC,MAAQ,CACNC,SAAS,EACTC,KAAM,MAGRC,oBACE,MAAM,MAAEC,GAAUC,KAAKC,MAEvBC,cAAMC,IAAI,4BAA6B,CAAEC,OAAQ,CAAEL,WAAWM,MAAKC,IACjEN,KAAKO,SAAS,CACZX,SAAS,EACTC,KAAMS,EAAIT,UAEXW,OAAMC,IACPC,QAAQC,MAAMF,MAIlBG,SACE,MAAM,MAAEb,GAAUC,KAAKC,OACjB,QAAEL,EAAF,KAAWC,GAASG,KAAKL,MAE/B,IAAIkB,EA4BJ,OAzBEA,EADEjB,EAEA,4BACGkB,MAAMC,KAAKD,MAAMf,IAAQiB,KAAI,CAACC,EAAGC,IAChC,YAAC,IAAD,GAAcA,MAMlB,4BACGrB,EAAKmB,KAAIG,GACR,YAAC,IAAD,CAEEC,KAAMD,EAAQC,KACdC,KAAI,eAAiBF,EAAQG,GAC7BC,OAAsC,EAA9BJ,EAAQK,QAAQ,GAAGC,SAA6C,EAA9BN,EAAQK,QAAQ,GAAGC,SAC7DC,KAAgC,EAA1BP,EAAQK,QAAQ,GAAGE,KAAqC,EAA1BP,EAAQK,QAAQ,GAAGE,KACvDF,QAASL,EAAQK,QAAQG,UAAUX,KAAIY,GAAOA,EAAIF,OAClDG,UAAWC,IAAWX,EAAQY,iBAAmB,iCAAkCZ,EAAQa,YAAcb,EAAQY,iBAAmB,2BAN/HZ,EAAQC,SAcrB,mBAAKS,UAAU,+BAAf,EACE,2BAAI,YAAC,IAAD,CAAkBP,GAAG,sBAAsBW,eAAe,kBAE7DpB","file":"js/6-7e9088b21f1dd9aca757.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport api from 'flavours/glitch/util/api';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport Hashtag from 'flavours/glitch/components/hashtag';\n\nexport default class Trends extends React.PureComponent {\n\n  static propTypes = {\n    limit: PropTypes.number.isRequired,\n  };\n\n  state = {\n    loading: true,\n    data: null,\n  };\n\n  componentDidMount () {\n    const { limit } = this.props;\n\n    api().get('/api/v1/admin/trends/tags', { params: { limit } }).then(res => {\n      this.setState({\n        loading: false,\n        data: res.data,\n      });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  render () {\n    const { limit } = this.props;\n    const { loading, data } = this.state;\n\n    let content;\n\n    if (loading) {\n      content = (\n        <div>\n          {Array.from(Array(limit)).map((_, i) => (\n            <Hashtag key={i} />\n          ))}\n        </div>\n      );\n    } else {\n      content = (\n        <div>\n          {data.map(hashtag => (\n            <Hashtag\n              key={hashtag.name}\n              name={hashtag.name}\n              href={`/admin/tags/${hashtag.id}`}\n              people={hashtag.history[0].accounts * 1 + hashtag.history[1].accounts * 1}\n              uses={hashtag.history[0].uses * 1 + hashtag.history[1].uses * 1}\n              history={hashtag.history.reverse().map(day => day.uses)}\n              className={classNames(hashtag.requires_review && 'trends__item--requires-review', !hashtag.trendable && !hashtag.requires_review && 'trends__item--disabled')}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <div className='trends trends--compact'>\n        <h4><FormattedMessage id='trends.trending_now' defaultMessage='Trending now' /></h4>\n\n        {content}\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}