(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{1129:function(o,e,n){"use strict";n.r(e),n.d(e,"default",(function(){return R}));var a,i,t=n(0),s=n(29),c=n.n(s),d=(n(1),n(12)),l=n(16),r=n.n(l),m=n(3),b=n.n(m),u=n(371),p=n(1292),j=n(1303),k=n(140),f=n(4),O=n(45),h=n(18);const g=Object(f.f)({unblockDomain:{id:"account.unblock_domain",defaultMessage:"Unblock domain {domain}"}});let M=Object(f.g)(((i=class extends h.a{constructor(){super(...arguments),this.handleDomainUnblock=()=>{this.props.onUnblockDomain(this.props.domain)}}render(){const{domain:o,intl:e}=this.props;return Object(t.a)("div",{className:"domain"},void 0,Object(t.a)("div",{className:"domain__wrapper"},void 0,Object(t.a)("span",{className:"domain__domain-name"},void 0,Object(t.a)("strong",{},void 0,o)),Object(t.a)("div",{className:"domain__buttons"},void 0,Object(t.a)(O.a,{active:!0,icon:"unlock",title:e.formatMessage(g.unblockDomain,{domain:o}),onClick:this.handleDomainUnblock}))))}}).propTypes={domain:b.a.string,onUnblockDomain:b.a.func.isRequired,intl:b.a.object.isRequired},a=i))||a;var v=n(51);const _=Object(f.f)({blockDomainConfirm:{id:"confirmations.domain_block.confirm",defaultMessage:"Block entire domain"}});var D,y,w=Object(f.g)(Object(d.connect)((()=>(o,e)=>{let{}=e;return{}}),((o,e)=>{let{intl:n}=e;return{onBlockDomain(e){o(Object(v.d)("CONFIRM",{message:Object(t.a)(f.b,{id:"confirmations.domain_block.message",defaultMessage:"Are you really, really sure you want to block the entire {domain}? In most cases a few targeted blocks or mutes are sufficient and preferable.",values:{domain:Object(t.a)("strong",{},void 0,e)}}),confirm:n.formatMessage(_.blockDomainConfirm),onConfirm:()=>o(Object(k.e)(e))}))},onUnblockDomain(e){o(Object(k.h)(e))}}}))(M)),C=n(1295);const U=Object(f.f)({heading:{id:"column.domain_blocks",defaultMessage:"Blocked domains"},unblockDomain:{id:"account.unblock_domain",defaultMessage:"Unblock domain {domain}"}});let R=Object(d.connect)((o=>({domains:o.getIn(["domain_lists","blocks","items"]),hasMore:!!o.getIn(["domain_lists","blocks","next"])})))(D=Object(f.g)(((y=class extends h.a{constructor(){super(...arguments),this.handleLoadMore=c()((()=>{this.props.dispatch(Object(k.f)())}),300,{leading:!0})}componentWillMount(){this.props.dispatch(Object(k.g)())}render(){const{intl:o,domains:e,hasMore:n,multiColumn:a}=this.props;if(!e)return Object(t.a)(p.a,{},void 0,Object(t.a)(u.b,{}));const i=Object(t.a)(f.b,{id:"empty_column.domain_blocks",defaultMessage:"There are no blocked domains yet."});return Object(t.a)(p.a,{bindToDocument:!a,icon:"minus-circle",heading:o.formatMessage(U.heading)},void 0,Object(t.a)(j.a,{}),Object(t.a)(C.a,{scrollKey:"domain_blocks",onLoadMore:this.handleLoadMore,hasMore:n,emptyMessage:i,bindToDocument:!a},void 0,e.map((o=>Object(t.a)(w,{domain:o},o)))))}}).propTypes={params:b.a.object.isRequired,dispatch:b.a.func.isRequired,hasMore:b.a.bool,domains:r.a.list,intl:b.a.object.isRequired,multiColumn:b.a.bool},D=y))||D)||D}}]);
//# sourceMappingURL=domain_blocks-bdf7b11495eb0fb0df18.chunk.js.map