(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{1099:function(s,t,e){"use strict";e.r(t),e.d(t,"default",(function(){return w}));var n,i,a=e(0),o=e(1),c=e.n(o),u=e(12),r=e(3),d=e.n(r),l=e(16),p=e.n(l),h=e(679),b=e(1292),m=e(1303),f=e(1330),g=e(4),j=e(18);const M=Object(g.f)({heading:{id:"column.pins",defaultMessage:"Pinned post"}});let w=Object(u.connect)((s=>({statusIds:s.getIn(["status_lists","pins","items"]),hasMore:!!s.getIn(["status_lists","pins","next"])})))(n=Object(g.g)(((i=class extends j.a{constructor(){super(...arguments),this.handleHeaderClick=()=>{this.column.scrollTop()},this.setRef=s=>{this.column=s}}componentWillMount(){this.props.dispatch(Object(h.b)())}render(){const{intl:s,statusIds:t,hasMore:e,multiColumn:n}=this.props;return c.a.createElement(b.a,{bindToDocument:!n,icon:"thumb-tack",heading:s.formatMessage(M.heading),ref:this.setRef},Object(a.a)(m.a,{}),Object(a.a)(f.a,{statusIds:t,scrollKey:"pinned_statuses",hasMore:e,bindToDocument:!n}))}}).propTypes={dispatch:d.a.func.isRequired,statusIds:p.a.list.isRequired,intl:d.a.object.isRequired,hasMore:d.a.bool.isRequired,multiColumn:d.a.bool},n=i))||n)||n}}]);
//# sourceMappingURL=pinned_statuses-91dc42eda421240d1229.chunk.js.map