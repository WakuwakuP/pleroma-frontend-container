{"version":3,"sources":["webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/flavours/glitch/packs/error.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/packs/public-path.js","webpack:///app/javascript/builds/infra/glitch-lily/app/javascript/flavours/glitch/util/ready.js"],"names":["ready","image","document","querySelector","addEventListener","src","removeOuterSlashes","string","replace","cdnHost","__webpack_public_path__","host","path","formattedHost","test","formatPublicPath","content","process","loaded","includes","readyState"],"mappings":"qIAAA,yBAGAA,mBAAM,KACJ,MAAMC,EAAQC,SAASC,cAAc,OAErCF,EAAMG,iBAAiB,cAAc,KACnCH,EAAMI,IAAM,eAGdJ,EAAMG,iBAAiB,cAAc,KACnCH,EAAMI,IAAM,mB,mBCPhB,SAASC,EAAmBC,GAC1B,OAAOA,EAAOC,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,IAYpD,MAAMC,EAAUP,SAASC,cAAc,uBAGvCO,IAZA,SAA0BC,EAAWC,QAAW,IAAtBD,MAAO,SAAe,IAAXC,MAAO,IAC1C,IAAIC,EAAgBP,EAAmBK,GAKvC,OAJIE,IAAkB,SAASC,KAAKD,KAClCA,EAAa,KAAQA,GAGbA,EAAV,IADsBP,EAAmBM,GACzC,IAMwBG,CAAiBN,EAAUA,EAAQO,QAAU,GAAIC,U,gCCpB5D,SAASjB,EAAMkB,GACxB,CAAC,cAAe,YAAYC,SAASjB,SAASkB,YAChDF,IAEAhB,SAASE,iBAAiB,mBAAoBc,GAJlD,iD","file":"js/flavours/glitch/error-4123b36ad50e6f128b3b.chunk.js","sourcesContent":["import 'packs/public-path';\nimport ready from 'flavours/glitch/util/ready';\n\nready(() => {\n  const image = document.querySelector('img');\n\n  image.addEventListener('mouseenter', () => {\n    image.src = '/oops.gif';\n  });\n\n  image.addEventListener('mouseleave', () => {\n    image.src = '/oops.png';\n  });\n});\n","// Dynamically set webpack's loading path depending on a meta header, in order\n// to share the same assets regardless of instance configuration.\n// See https://webpack.js.org/guides/public-path/#on-the-fly\n\nfunction removeOuterSlashes(string) {\n  return string.replace(/^\\/*/, '').replace(/\\/*$/, '');\n}\n\nfunction formatPublicPath(host = '', path = '') {\n  let formattedHost = removeOuterSlashes(host);\n  if (formattedHost && !/^http/i.test(formattedHost)) {\n    formattedHost = `//${formattedHost}`;\n  }\n  const formattedPath = removeOuterSlashes(path);\n  return `${formattedHost}/${formattedPath}/`;\n}\n\nconst cdnHost = document.querySelector('meta[name=cdn-host]');\n\n// eslint-disable-next-line camelcase, no-undef, no-unused-vars\n__webpack_public_path__ = formatPublicPath(cdnHost ? cdnHost.content : '', process.env.PUBLIC_OUTPUT_PATH);\n","export default function ready(loaded) {\n  if (['interactive', 'complete'].includes(document.readyState)) {\n    loaded();\n  } else {\n    document.addEventListener('DOMContentLoaded', loaded);\n  }\n}\n"],"sourceRoot":""}